
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.12.0.240.2

// ldbanno -n Verilog -o helloworld1_impl1_mapvo.vo -w -neg -gui -msgset C:/Users/Abel/Documents/CPLDOSCReadoutMultiRead/promote.xml helloworld1_impl1_map.ncd 
// Netlist created on Wed Oct 25 19:12:29 2023
// Netlist written on Wed Oct 25 19:13:04 2023
// Design is for device LCMXO2-640UHC
// Design is for package TQFP144
// Design is for performance grade 5

`timescale 1 ns / 1 ps

module top ( PhaseA1, Rst, Rst1, Rst2, p1, DebugP2, DebugP3, PhaseC1, PhaseC2, 
             PhaseC3, PhaseC4, PhaseA2, PhaseA4, Sin1, Sin2, Sin3, Sin4, Sin5, 
             Sin6, Sin7, Sin8, Sin9, Sin10, Sin11, Sin12, Sin14, Sin15, Sin16, 
             Clk1, Clk2, Clk3, Clk4, RS1, RS2, RS3, RS4, RS5, RS6, RS7, RS8, 
             ADMode_1, ADMode_2, ADMode_3, ADMode1_1, ADMode1_2, ADMode1_3, 
             ADRst1, ADRst2, ADRst3, ADClk1, ADClk2, ADClk3, ADSout1, ADSout2, 
             ADSout3, ADSout4, ADSout5, ADSout6, ADSout7, ADSout8, AD0, AD1, 
             ADSout15, Sout1, Sout2, Sout3, Sout4, ClkOut, DataOut, ResCS1, 
             ResCS2, ResCS3, ResCS4, ResCS5, ResCS6, ResCS7, ResCS8, ResClk, 
             ResSDI1, ResSDI2, OSC_in );
  input  ADSout1, ADSout2, ADSout3, ADSout4, ADSout5, ADSout6, ADSout7, 
         ADSout8, ADSout15, OSC_in;
  output PhaseA1, Rst, Rst1, Rst2, p1, DebugP2, DebugP3, PhaseC1, PhaseC2, 
         PhaseC3, PhaseC4, PhaseA2, PhaseA4, Sin1, Sin2, Sin3, Sin4, Sin5, 
         Sin6, Sin7, Sin8, Sin9, Sin10, Sin11, Sin12, Sin14, Sin15, Sin16, 
         Clk1, Clk2, Clk3, Clk4, RS1, RS2, RS3, RS4, RS5, RS6, RS7, RS8, 
         ADMode_1, ADMode_2, ADMode_3, ADMode1_1, ADMode1_2, ADMode1_3, ADRst1, 
         ADRst2, ADRst3, ADClk1, ADClk2, ADClk3, AD0, AD1, Sout1, Sout2, Sout3, 
         Sout4, ClkOut, DataOut, ResCS1, ResCS2, ResCS3, ResCS4, ResCS5, 
         ResCS6, ResCS7, ResCS8, ResClk, ResSDI1, ResSDI2;
  wire   count_14, count_13, n4666, count_31_N_257_13, count_31_N_257_14, 
         n4667, n3, n4_adj_705, n36, n37, clk_out1_N_7_enable_26, n3455, 
         clk_out1, n4726, n4727, n5_adj_707, n6, n38, n39_adj_688, n4725, 
         state_4_N_110_0, state_4_N_95_0, n4664, count_31_N_257_9, 
         count_31_N_257_10, n4665, count_4, state_4_N_120_1, n4661, 
         count_31_N_257_3, count_31_N_257_4, n4662, n4710, n4711, count_0, 
         count_31_N_257_0, n4660, state_4_N_105_2, state_4_N_125_0, 
         count_31_N_257_5, count_31_N_257_6, n4663, count_2, count_1, n4709, 
         n7_adj_706, n40, count_31, n4724, n2560, count_30, count_29, n4723, 
         n4675, count_31_N_257_31, count_28, count_27, n4722, count_26, 
         count_25, n4721, count_24, count_23, n4720, count_22, count_21, n4719, 
         count_20, count_19, n4718, count_18, count_17, n4717, 
         count_31_N_257_1, count_31_N_257_2, count_12, count_11, 
         count_31_N_257_11, count_31_N_257_12, count_16, count_15, n4716, 
         n4674, count_31_N_257_29, count_31_N_257_30, n4715, n4673, 
         count_31_N_257_27, count_31_N_257_28, n4714, n4713, n4672, 
         count_31_N_257_25, count_31_N_257_26, count_8, count_7, n4712, n4671, 
         count_31_N_257_23, count_31_N_257_24, n4670, count_31_N_257_21, 
         count_31_N_257_22, n4669, count_31_N_257_19, count_31_N_257_20, 
         countcur_6, n2, n34, n35, count_31_N_257_7, count_31_N_257_8, n4668, 
         count_31_N_257_17, count_31_N_257_18, count_31_N_257_15, 
         count_31_N_257_16, state_3, state_2, state_0, n5324, state_1, 
         ADClk3_c, n5590, n6510, ADMode1_3_c, clk_out1_N_7_enable_7, 
         ResCScount_2, ADMode_1_N_562, ADMode_3_c, n4_adj_601, ADRst1_N_561, 
         ADRst3_c, n6525, state_4__N_70, Clk, n5700, Sout1_N_568, ClkOut_c, 
         n6521, ADSout8_c, n3_adj_774, n5524, n6506, DataOut_c, n6515, n6504, 
         DebugP2_c, clk_out1_N_7_enable_19, n7, PhaseA1_N_531, PhaseA4_c, 
         n4_adj_719, n5148, n5200, state_4__N_73, PhaseC4_c, n33, read_count_0, 
         n6522, read_count_1, RS1_N_541, RS5_c, VCC_net, n63_adj_646, 
         RS2_N_544, RS6_c, n64_adj_681, read_count_2, read_count_4, 
         read_count_3, RS3_N_548, RS7_c, n6503, ResCS7_c, 
         clk_out1_N_7_enable_23, state_4_N_80_1, ResCScount_0, n11, n2784, 
         ResCScount_1, n1744, n1745, ResCScount_3, n1743, n56, ResCS7_N_573, 
         ResClkE, n6511, n86, ResSDI1_N_576, n5444, ResSDI2_c, ResStep, n6524, 
         ResStep_N_588, n3451, Resbitcount_0, Resbitcount_1, 
         Resbitcount_3_N_45_1, Resbitcount_3_N_45_0, n6519, Resbitcount_2, 
         Resbitcount_3, Resbitcount_3_N_45_3, Resbitcount_3_N_45_2, n9_adj_662, 
         Rst2_c, Sout3_c_0, Sin3_N_536, Sin16_c, n5679, Sin6_N_538, Sin8_c, 
         n5669, n16_adj_700, n64, n20_adj_663, n16_adj_746, n64_adj_629, 
         n20_adj_718, count_31_N_8_1, count_31_N_8_0, n16_adj_735, n64_adj_643, 
         n20_adj_727, n16_adj_764, n64_adj_589, n20_adj_760, count_31_N_8_4, 
         count_31_N_8_2, n16_adj_635, n64_adj_656, n20_adj_595, n16, 
         n64_adj_651, n20_adj_638, count_31_N_8_8, count_31_N_8_7, n16_adj_605, 
         n64_adj_675, n20_adj_603, n16_adj_611, n64_adj_668, n20_adj_610, 
         count_31_N_8_12, count_31_N_8_11, n16_adj_617, n20_adj_616, 
         n16_adj_613, n64_adj_678, n20_adj_612, count_31_N_8_14, 
         count_31_N_8_13, n16_adj_621, n64_adj_690, n20_adj_620, n16_adj_636, 
         n64_adj_685, n20_adj_627, count_31_N_8_16, count_31_N_8_15, 
         n16_adj_708, n64_adj_696, n20_adj_701, n16_adj_671, n64_adj_693, 
         n20_adj_709, count_31_N_8_18, count_31_N_8_17, n16_adj_637, 
         n64_adj_710, n20_adj_640, n16_adj_658, n64_adj_702, n20_adj_733, 
         count_31_N_8_20, count_31_N_8_19, n16_adj_639, n64_adj_716, 
         n20_adj_765, n16_adj_699, n64_adj_713, n20_adj_689, count_31_N_8_22, 
         count_31_N_8_21, n16_adj_763, n64_adj_728, n20_adj_672, n16_adj_750, 
         n64_adj_722, n20_adj_692, count_31_N_8_24, count_31_N_8_23, 
         n16_adj_628, n64_adj_737, n20, n16_adj_648, n64_adj_734, n20_adj_642, 
         count_31_N_8_26, count_31_N_8_25, n16_adj_669, n64_adj_744, 
         n20_adj_661, n16_adj_687, n64_adj_740, n20_adj_682, count_31_N_8_28, 
         count_31_N_8_27, n16_adj_731, n64_adj_752, n20_adj_723, n16_adj_711, 
         n64_adj_747, n20_adj_698, count_31_N_8_30, count_31_N_8_29, n19, 
         n16_adj_748, n64_adj_754, n20_adj_742, count_31_N_8_31, n29_adj_674, 
         n3854, clk_out1_N_7_enable_14, n3657, n27, n28, n6520, n26_adj_673, 
         state_4_N_130_1, n7221, n7217, n7220, clk_out1_N_7_enable_10, n3251, 
         n3118, n3260, n5, n3114, n2935, n3249, n46, n6532, 
         clk_out1_N_7_enable_20, n16_adj_625, n64_adj_645, n20_adj_725, 
         count_31_N_8_6, n16_adj_597, n64_adj_665, n20_adj_596, 
         count_31_N_8_10, n22, n8_adj_653, n26, count_31_N_8_3, n16_adj_732, 
         n64_adj_644, n20_adj_695, count_31_N_8_5, n16_adj_593, n64_adj_659, 
         n20_adj_592, count_31_N_8_9, n3686, state_4_N_135_0, n57_adj_755, 
         n57_adj_749, n57_adj_753, n57_adj_741, n57_adj_745, n10, n57_adj_736, 
         n57_adj_738, n57_adj_724, n57_adj_729, n3685, n6509, n57_adj_714, 
         n57_adj_717, n6499, n57_adj_704, n57_adj_712, n57_adj_694, 
         n57_adj_697, n57_adj_691, n3079, n57_adj_686, n57_adj_679, 
         n57_adj_683, n57_adj_670, n57_adj_676, n57_adj_660, n57_adj_666, 
         n57_adj_657, n57_adj_652, n57_adj_647, n57, n6508, n5596, n4_adj_773, 
         n6507, n6495, n4_adj_772, n6496, n6526, n6494, n4_adj_771, n6498, 
         n4_adj_770, n4_adj_775, n6497, n6500, n6501, n5954, n3406, 
         n40_adj_720, n39, n50, n45, n5644, n30, n42, n48, n29, n34_adj_759, 
         n44, n5953, n6513, n6523, Sout2_c, ADSout7_c, Sout4_c, n5632, n6516, 
         n5053, n6518, n3252, ResSDI1_N_580_3, Clk4_c, ResClk_c, GND_net, 
         OSC_in_c, VCCI;

  SLICE_0 SLICE_0( .A1(count_14), .A0(count_13), .FCI(n4666), 
    .F0(count_31_N_257_13), .F1(count_31_N_257_14), .FCO(n4667));
  SLICE_1 SLICE_1( .A1(n3), .A0(n4_adj_705), .DI1(n36), .DI0(n37), 
    .CE(clk_out1_N_7_enable_26), .LSR(n3455), .CLK(clk_out1), .FCI(n4726), 
    .F0(n37), .Q0(n4_adj_705), .F1(n36), .Q1(n3), .FCO(n4727));
  SLICE_2 SLICE_2( .A1(n5_adj_707), .A0(n6), .DI1(n38), .DI0(n39_adj_688), 
    .CE(clk_out1_N_7_enable_26), .LSR(n3455), .CLK(clk_out1), .FCI(n4725), 
    .F0(n39_adj_688), .Q0(n6), .F1(n38), .Q1(n5_adj_707), .FCO(n4726));
  SLICE_3 SLICE_3( .A1(state_4_N_110_0), .A0(state_4_N_95_0), .FCI(n4664), 
    .F0(count_31_N_257_9), .F1(count_31_N_257_10), .FCO(n4665));
  SLICE_4 SLICE_4( .A1(count_4), .A0(state_4_N_120_1), .FCI(n4661), 
    .F0(count_31_N_257_3), .F1(count_31_N_257_4), .FCO(n4662));
  SLICE_5 SLICE_5( .A1(count_4), .A0(state_4_N_120_1), .FCI(n4710), 
    .FCO(n4711));
  SLICE_6 SLICE_6( .A1(count_0), .F1(count_31_N_257_0), .FCO(n4660));
  SLICE_7 SLICE_7( .A1(state_4_N_105_2), .A0(state_4_N_125_0), .FCI(n4662), 
    .F0(count_31_N_257_5), .F1(count_31_N_257_6), .FCO(n4663));
  SLICE_8 SLICE_8( .A1(count_2), .A0(count_1), .FCI(n4709), .FCO(n4710));
  SLICE_9 SLICE_9( .A1(n7_adj_706), .DI1(n40), .CE(clk_out1_N_7_enable_26), 
    .LSR(n3455), .CLK(clk_out1), .F1(n40), .Q1(n7_adj_706), .FCO(n4725));
  SLICE_10 SLICE_10( .A1(count_0), .FCO(n4709));
  SLICE_11 SLICE_11( .A0(count_31), .FCI(n4724), .F1(n2560));
  SLICE_12 SLICE_12( .A1(count_30), .A0(count_29), .FCI(n4723), .FCO(n4724));
  SLICE_13 SLICE_13( .A0(count_31), .FCI(n4675), .F0(count_31_N_257_31));
  SLICE_14 SLICE_14( .A1(count_28), .A0(count_27), .FCI(n4722), .FCO(n4723));
  SLICE_15 SLICE_15( .A1(count_26), .A0(count_25), .FCI(n4721), .FCO(n4722));
  SLICE_16 SLICE_16( .A1(count_24), .A0(count_23), .FCI(n4720), .FCO(n4721));
  SLICE_17 SLICE_17( .A1(count_22), .A0(count_21), .FCI(n4719), .FCO(n4720));
  SLICE_18 SLICE_18( .A1(count_20), .A0(count_19), .FCI(n4718), .FCO(n4719));
  SLICE_19 SLICE_19( .A1(count_18), .A0(count_17), .FCI(n4717), .FCO(n4718));
  SLICE_20 SLICE_20( .A1(count_2), .A0(count_1), .FCI(n4660), 
    .F0(count_31_N_257_1), .F1(count_31_N_257_2), .FCO(n4661));
  SLICE_21 SLICE_21( .A1(count_12), .A0(count_11), .FCI(n4665), 
    .F0(count_31_N_257_11), .F1(count_31_N_257_12), .FCO(n4666));
  SLICE_22 SLICE_22( .A1(count_16), .A0(count_15), .FCI(n4716), .FCO(n4717));
  SLICE_23 SLICE_23( .A1(count_30), .A0(count_29), .FCI(n4674), 
    .F0(count_31_N_257_29), .F1(count_31_N_257_30), .FCO(n4675));
  SLICE_24 SLICE_24( .A1(count_14), .A0(count_13), .FCI(n4715), .FCO(n4716));
  SLICE_25 SLICE_25( .A1(count_28), .A0(count_27), .FCI(n4673), 
    .F0(count_31_N_257_27), .F1(count_31_N_257_28), .FCO(n4674));
  SLICE_26 SLICE_26( .A1(count_12), .A0(count_11), .FCI(n4714), .FCO(n4715));
  SLICE_27 SLICE_27( .A1(state_4_N_110_0), .A0(state_4_N_95_0), .FCI(n4713), 
    .FCO(n4714));
  SLICE_28 SLICE_28( .A1(count_26), .A0(count_25), .FCI(n4672), 
    .F0(count_31_N_257_25), .F1(count_31_N_257_26), .FCO(n4673));
  SLICE_29 SLICE_29( .A1(count_8), .A0(count_7), .FCI(n4712), .FCO(n4713));
  SLICE_30 SLICE_30( .A1(count_24), .A0(count_23), .FCI(n4671), 
    .F0(count_31_N_257_23), .F1(count_31_N_257_24), .FCO(n4672));
  SLICE_31 SLICE_31( .A1(count_22), .A0(count_21), .FCI(n4670), 
    .F0(count_31_N_257_21), .F1(count_31_N_257_22), .FCO(n4671));
  SLICE_32 SLICE_32( .A1(count_20), .A0(count_19), .FCI(n4669), 
    .F0(count_31_N_257_19), .F1(count_31_N_257_20), .FCO(n4670));
  SLICE_33 SLICE_33( .A1(countcur_6), .A0(n2), .DI1(n34), .DI0(n35), 
    .CE(clk_out1_N_7_enable_26), .LSR(n3455), .CLK(clk_out1), .FCI(n4727), 
    .F0(n35), .Q0(n2), .F1(n34), .Q1(countcur_6));
  SLICE_34 SLICE_34( .A1(count_8), .A0(count_7), .FCI(n4663), 
    .F0(count_31_N_257_7), .F1(count_31_N_257_8), .FCO(n4664));
  SLICE_35 SLICE_35( .A1(count_18), .A0(count_17), .FCI(n4668), 
    .F0(count_31_N_257_17), .F1(count_31_N_257_18), .FCO(n4669));
  SLICE_36 SLICE_36( .A1(state_4_N_105_2), .A0(state_4_N_125_0), .FCI(n4711), 
    .FCO(n4712));
  SLICE_37 SLICE_37( .A1(count_16), .A0(count_15), .FCI(n4667), 
    .F0(count_31_N_257_15), .F1(count_31_N_257_16), .FCO(n4668));
  SLICE_38 SLICE_38( .C1(state_3), .B1(state_2), .A1(state_0), .D0(n2560), 
    .C0(state_3), .B0(state_2), .A0(state_0), .DI0(n5324), .M0(state_1), 
    .LSR(count_0), .CLK(clk_out1), .OFX0(n5324), .Q0(ADClk3_c));
  SLICE_39 SLICE_39( .C1(state_0), .B1(state_3), .A1(n5590), .D0(state_1), 
    .C0(state_0), .B0(state_3), .A0(state_2), .DI0(n6510), .CLK(clk_out1), 
    .F0(n6510), .Q0(ADMode1_3_c), .F1(clk_out1_N_7_enable_7));
  SLICE_40 SLICE_40( .B1(state_4_N_125_0), .A1(ResCScount_2), .C0(state_1), 
    .B0(state_2), .A0(state_3), .DI0(ADMode_1_N_562), .CLK(clk_out1), 
    .F0(ADMode_1_N_562), .Q0(ADMode_3_c), .F1(n4_adj_601));
  SLICE_41 SLICE_41( .B1(state_2), .A1(state_3), .D0(state_2), .C0(state_0), 
    .B0(state_1), .A0(state_3), .DI0(ADRst1_N_561), .CLK(clk_out1), 
    .F0(ADRst1_N_561), .Q0(ADRst3_c), .F1(n6525));
  SLICE_42 SLICE_42( .B1(state_0), .A1(state_2), .D0(state_1), .C0(state_0), 
    .B0(state_3), .A0(state_2), .DI0(state_4__N_70), .CLK(clk_out1), 
    .F0(state_4__N_70), .Q0(Clk), .F1(n5700));
  SLICE_43 SLICE_43( .B1(state_1), .A1(state_3), .D0(state_1), .C0(state_2), 
    .B0(state_0), .A0(state_3), .DI0(Sout1_N_568), .LSR(count_0), 
    .CLK(clk_out1), .F0(Sout1_N_568), .Q0(ClkOut_c), .F1(n6521));
  SLICE_44 SLICE_44( .C1(state_1), .B1(ADSout8_c), .A1(state_2), .D0(state_0), 
    .C0(state_1), .B0(n3_adj_774), .A0(state_3), .DI0(n5524), .LSR(n6506), 
    .CLK(clk_out1), .F0(n5524), .Q0(DataOut_c), .F1(n3_adj_774));
  SLICE_45 SLICE_45( .D1(n6515), .C1(state_4_N_120_1), .B1(state_3), 
    .A1(state_2), .D0(state_2), .C0(state_3), .B0(state_0), .A0(state_1), 
    .DI0(n6504), .CLK(clk_out1), .F0(n6504), .Q0(DebugP2_c), 
    .F1(clk_out1_N_7_enable_19));
  SLICE_46 SLICE_46( .D1(state_0), .C1(state_4_N_105_2), .B1(n7), .A1(state_2), 
    .D0(state_2), .C0(state_0), .B0(state_1), .A0(state_3), 
    .DI0(PhaseA1_N_531), .CLK(clk_out1), .F0(PhaseA1_N_531), .Q0(PhaseA4_c), 
    .F1(n4_adj_719));
  SLICE_47 SLICE_47( .D1(n5148), .C1(state_0), .B1(n5200), .A1(state_3), 
    .D0(state_1), .C0(state_0), .B0(state_2), .A0(state_3), 
    .DI0(state_4__N_73), .CLK(clk_out1), .F0(state_4__N_73), .Q0(PhaseC4_c), 
    .F1(n33));
  SLICE_48 SLICE_48( .C0(read_count_0), .B0(n6522), .A0(read_count_1), 
    .DI0(RS1_N_541), .CE(clk_out1_N_7_enable_19), .CLK(clk_out1), 
    .F0(RS1_N_541), .Q0(RS5_c), .F1(VCC_net));
  SLICE_49 SLICE_49( .B1(n63_adj_646), .A1(count_14), .C0(read_count_0), 
    .B0(n6522), .A0(read_count_1), .DI0(RS2_N_544), 
    .CE(clk_out1_N_7_enable_19), .CLK(clk_out1), .F0(RS2_N_544), .Q0(RS6_c), 
    .F1(n64_adj_681));
  SLICE_50 SLICE_50( .C1(read_count_2), .B1(read_count_4), .A1(read_count_3), 
    .C0(read_count_0), .B0(n6522), .A0(read_count_1), .DI0(RS3_N_548), 
    .CE(clk_out1_N_7_enable_19), .CLK(clk_out1), .F0(RS3_N_548), .Q0(RS7_c), 
    .F1(n6522));
  SLICE_51 SLICE_51( .D1(state_1), .C1(state_0), .B1(state_2), .A1(state_3), 
    .D0(state_3), .C0(state_2), .B0(state_0), .A0(state_1), .DI0(n6503), 
    .CLK(clk_out1), .F0(n6503), .Q0(ResCS7_c), .F1(clk_out1_N_7_enable_23));
  SLICE_52 SLICE_52( .D1(state_1), .C1(state_4_N_80_1), .B1(state_2), .A1(n7), 
    .D0(ResCScount_0), .C0(state_0), .B0(state_3), .A0(n5590), .DI0(n11), 
    .LSR(n2784), .CLK(clk_out1), .F0(n11), .Q0(ResCScount_0), .F1(n5590));
  SLICE_53 SLICE_53( .C1(ResCScount_2), .B1(ResCScount_0), .A1(ResCScount_1), 
    .B0(ResCScount_0), .A0(ResCScount_1), .DI1(n1744), .DI0(n1745), 
    .CE(clk_out1_N_7_enable_7), .LSR(n2784), .CLK(clk_out1), .F0(n1745), 
    .Q0(ResCScount_1), .F1(n1744), .Q1(ResCScount_2));
  SLICE_54 SLICE_54( .D1(ResCScount_1), .C1(count_4), .B1(state_4_N_120_1), 
    .A1(ResCScount_0), .D0(ResCScount_3), .C0(ResCScount_2), .B0(ResCScount_0), 
    .A0(ResCScount_1), .DI0(n1743), .CE(clk_out1_N_7_enable_7), .LSR(n2784), 
    .CLK(clk_out1), .F0(n1743), .Q0(ResCScount_3), .F1(n56));
  SLICE_55 SLICE_55( .D1(state_1), .C1(state_0), .B1(state_3), .A1(state_2), 
    .D0(state_3), .C0(state_2), .B0(state_0), .A0(state_1), .DI0(ResCS7_N_573), 
    .CLK(clk_out1), .F0(ResCS7_N_573), .Q0(ResClkE), .F1(n6511));
  SLICE_56 SLICE_56( .D1(n86), .C1(n56), .B1(n6525), .A1(n6515), 
    .D0(ResSDI1_N_576), .C0(state_0), .B0(state_3), .A0(state_1), .DI0(n5444), 
    .M0(state_2), .LSR(n6506), .CLK(clk_out1), .OFX0(n5444), .Q0(ResSDI2_c));
  SLICE_57 SLICE_57( .B1(state_3), .A1(state_2), .D0(ResStep), .C0(n6524), 
    .B0(state_0), .A0(state_1), .DI0(ResStep_N_588), .CLK(clk_out1), 
    .F0(ResStep_N_588), .Q0(ResStep), .F1(n6524));
  SLICE_58 SLICE_58( .C1(n3451), .B1(Resbitcount_0), .A1(Resbitcount_1), 
    .B0(n3451), .A0(Resbitcount_0), .DI1(Resbitcount_3_N_45_1), 
    .DI0(Resbitcount_3_N_45_0), .CE(clk_out1_N_7_enable_23), .CLK(clk_out1), 
    .F0(Resbitcount_3_N_45_0), .Q0(Resbitcount_0), .F1(Resbitcount_3_N_45_1), 
    .Q1(Resbitcount_1));
  SLICE_59 SLICE_59( .D1(n6519), .C1(Resbitcount_2), .B1(n3451), 
    .A1(Resbitcount_3), .D0(Resbitcount_2), .C0(n3451), .B0(Resbitcount_0), 
    .A0(Resbitcount_1), .DI1(Resbitcount_3_N_45_3), .DI0(Resbitcount_3_N_45_2), 
    .CE(clk_out1_N_7_enable_23), .CLK(clk_out1), .F0(Resbitcount_3_N_45_2), 
    .Q0(Resbitcount_2), .F1(Resbitcount_3_N_45_3), .Q1(Resbitcount_3));
  SLICE_60 SLICE_60( .D1(state_2), .C1(state_3), .B1(state_0), .A1(state_1), 
    .D0(state_1), .C0(state_0), .B0(state_3), .A0(state_2), .DI0(n9_adj_662), 
    .LSR(state_4_N_95_0), .CLK(clk_out1), .F0(n9_adj_662), .Q0(Rst2_c), 
    .F1(Sout3_c_0));
  SLICE_61 SLICE_61( .B1(count_0), .A1(state_4_N_120_1), .D0(count_1), 
    .C0(count_0), .B0(state_4_N_120_1), .A0(count_2), .DI0(Sin3_N_536), 
    .LSR(n6511), .CLK(clk_out1), .F0(Sin3_N_536), .Q0(Sin16_c), .F1(n5679));
  SLICE_62 SLICE_62( .B1(count_1), .A1(count_2), .D0(count_1), 
    .C0(state_4_N_120_1), .B0(count_0), .A0(count_2), .DI0(Sin6_N_538), 
    .LSR(n6511), .CLK(clk_out1), .F0(Sin6_N_538), .Q0(Sin8_c), .F1(n5669));
  SLICE_63 SLICE_63( .D1(n16_adj_700), .C1(n64), .B1(state_3), 
    .A1(n20_adj_663), .D0(n16_adj_746), .C0(n64_adj_629), .B0(state_3), 
    .A0(n20_adj_718), .DI1(count_31_N_8_1), .DI0(count_31_N_8_0), 
    .CLK(clk_out1), .F0(count_31_N_8_0), .Q0(count_0), .F1(count_31_N_8_1), 
    .Q1(count_1));
  SLICE_64 SLICE_64( .D1(n16_adj_735), .C1(n64_adj_643), .B1(state_3), 
    .A1(n20_adj_727), .D0(n16_adj_764), .C0(n64_adj_589), .B0(state_3), 
    .A0(n20_adj_760), .DI1(count_31_N_8_4), .DI0(count_31_N_8_2), 
    .CLK(clk_out1), .F0(count_31_N_8_2), .Q0(count_2), .F1(count_31_N_8_4), 
    .Q1(count_4));
  SLICE_65 SLICE_65( .D1(n16_adj_635), .C1(n64_adj_656), .B1(state_3), 
    .A1(n20_adj_595), .D0(n16), .C0(n64_adj_651), .B0(state_3), 
    .A0(n20_adj_638), .DI1(count_31_N_8_8), .DI0(count_31_N_8_7), 
    .CLK(clk_out1), .F0(count_31_N_8_7), .Q0(count_7), .F1(count_31_N_8_8), 
    .Q1(count_8));
  SLICE_66 SLICE_66( .D1(n16_adj_605), .C1(n64_adj_675), .B1(state_3), 
    .A1(n20_adj_603), .D0(n16_adj_611), .C0(n64_adj_668), .B0(state_3), 
    .A0(n20_adj_610), .DI1(count_31_N_8_12), .DI0(count_31_N_8_11), 
    .CLK(clk_out1), .F0(count_31_N_8_11), .Q0(count_11), .F1(count_31_N_8_12), 
    .Q1(count_12));
  SLICE_67 SLICE_67( .D1(n16_adj_617), .C1(n64_adj_681), .B1(state_3), 
    .A1(n20_adj_616), .D0(n16_adj_613), .C0(n64_adj_678), .B0(state_3), 
    .A0(n20_adj_612), .DI1(count_31_N_8_14), .DI0(count_31_N_8_13), 
    .CLK(clk_out1), .F0(count_31_N_8_13), .Q0(count_13), .F1(count_31_N_8_14), 
    .Q1(count_14));
  SLICE_68 SLICE_68( .D1(n16_adj_621), .C1(n64_adj_690), .B1(state_3), 
    .A1(n20_adj_620), .D0(n16_adj_636), .C0(n64_adj_685), .B0(state_3), 
    .A0(n20_adj_627), .DI1(count_31_N_8_16), .DI0(count_31_N_8_15), 
    .CLK(clk_out1), .F0(count_31_N_8_15), .Q0(count_15), .F1(count_31_N_8_16), 
    .Q1(count_16));
  SLICE_69 SLICE_69( .D1(n16_adj_708), .C1(n64_adj_696), .B1(state_3), 
    .A1(n20_adj_701), .D0(n16_adj_671), .C0(n64_adj_693), .B0(state_3), 
    .A0(n20_adj_709), .DI1(count_31_N_8_18), .DI0(count_31_N_8_17), 
    .CLK(clk_out1), .F0(count_31_N_8_17), .Q0(count_17), .F1(count_31_N_8_18), 
    .Q1(count_18));
  SLICE_70 SLICE_70( .D1(n16_adj_637), .C1(n64_adj_710), .B1(state_3), 
    .A1(n20_adj_640), .D0(n16_adj_658), .C0(n64_adj_702), .B0(state_3), 
    .A0(n20_adj_733), .DI1(count_31_N_8_20), .DI0(count_31_N_8_19), 
    .CLK(clk_out1), .F0(count_31_N_8_19), .Q0(count_19), .F1(count_31_N_8_20), 
    .Q1(count_20));
  SLICE_71 SLICE_71( .D1(n16_adj_639), .C1(n64_adj_716), .B1(state_3), 
    .A1(n20_adj_765), .D0(n16_adj_699), .C0(n64_adj_713), .B0(state_3), 
    .A0(n20_adj_689), .DI1(count_31_N_8_22), .DI0(count_31_N_8_21), 
    .CLK(clk_out1), .F0(count_31_N_8_21), .Q0(count_21), .F1(count_31_N_8_22), 
    .Q1(count_22));
  SLICE_72 SLICE_72( .D1(n16_adj_763), .C1(n64_adj_728), .B1(state_3), 
    .A1(n20_adj_672), .D0(n16_adj_750), .C0(n64_adj_722), .B0(state_3), 
    .A0(n20_adj_692), .DI1(count_31_N_8_24), .DI0(count_31_N_8_23), 
    .CLK(clk_out1), .F0(count_31_N_8_23), .Q0(count_23), .F1(count_31_N_8_24), 
    .Q1(count_24));
  SLICE_73 SLICE_73( .D1(n16_adj_628), .C1(n64_adj_737), .B1(state_3), 
    .A1(n20), .D0(n16_adj_648), .C0(n64_adj_734), .B0(state_3), 
    .A0(n20_adj_642), .DI1(count_31_N_8_26), .DI0(count_31_N_8_25), 
    .CLK(clk_out1), .F0(count_31_N_8_25), .Q0(count_25), .F1(count_31_N_8_26), 
    .Q1(count_26));
  SLICE_74 SLICE_74( .D1(n16_adj_669), .C1(n64_adj_744), .B1(state_3), 
    .A1(n20_adj_661), .D0(n16_adj_687), .C0(n64_adj_740), .B0(state_3), 
    .A0(n20_adj_682), .DI1(count_31_N_8_28), .DI0(count_31_N_8_27), 
    .CLK(clk_out1), .F0(count_31_N_8_27), .Q0(count_27), .F1(count_31_N_8_28), 
    .Q1(count_28));
  SLICE_75 SLICE_75( .D1(n16_adj_731), .C1(n64_adj_752), .B1(state_3), 
    .A1(n20_adj_723), .D0(n16_adj_711), .C0(n64_adj_747), .B0(state_3), 
    .A0(n20_adj_698), .DI1(count_31_N_8_30), .DI0(count_31_N_8_29), 
    .CLK(clk_out1), .F0(count_31_N_8_29), .Q0(count_29), .F1(count_31_N_8_30), 
    .Q1(count_30));
  SLICE_76 SLICE_76( .B1(n19), .A1(count_31_N_257_31), .D0(n16_adj_748), 
    .C0(n64_adj_754), .B0(state_3), .A0(n20_adj_742), .DI0(count_31_N_8_31), 
    .CLK(clk_out1), .F0(count_31_N_8_31), .Q0(count_31), .F1(n20_adj_742));
  SLICE_77 SLICE_77( .B1(read_count_0), .A1(read_count_1), .A0(read_count_0), 
    .DI1(n29_adj_674), .DI0(n3854), .CE(clk_out1_N_7_enable_14), .LSR(n3657), 
    .CLK(clk_out1), .F0(n3854), .Q0(read_count_0), .F1(n29_adj_674), 
    .Q1(read_count_1));
  SLICE_78 SLICE_78( .D1(read_count_2), .C1(read_count_3), .B1(read_count_0), 
    .A1(read_count_1), .C0(read_count_2), .B0(read_count_0), .A0(read_count_1), 
    .DI1(n27), .DI0(n28), .CE(clk_out1_N_7_enable_14), .LSR(n3657), 
    .CLK(clk_out1), .F0(n28), .Q0(read_count_2), .F1(n27), .Q1(read_count_3));
  SLICE_79 SLICE_79( .B1(read_count_0), .A1(read_count_1), .D0(read_count_4), 
    .C0(read_count_3), .B0(n6520), .A0(read_count_2), .DI0(n26_adj_673), 
    .CE(clk_out1_N_7_enable_14), .LSR(n3657), .CLK(clk_out1), .F0(n26_adj_673), 
    .Q0(read_count_4), .F1(n6520));
  SLICE_80 SLICE_80( .C1(state_4_N_125_0), .B1(state_4_N_130_1), .A1(state_0), 
    .D0(state_4_N_120_1), .C0(state_0), .B0(state_2), .A0(state_4_N_110_0), 
    .DI1(n7221), .M1(state_1), .M0(state_3), .FXB(n7217), .FXA(n7220), 
    .CE(clk_out1_N_7_enable_10), .CLK(clk_out1), .OFX0(n7217), .Q1(state_0), 
    .OFX1(n7221));
  SLICE_81 SLICE_81( .B1(state_4_N_130_1), .A1(state_0), .D0(state_4_N_80_1), 
    .C0(state_4_N_120_1), .B0(state_2), .A0(state_0), .DI1(n3251), 
    .M1(state_1), .M0(state_3), .FXB(n3118), .FXA(n3260), 
    .CE(clk_out1_N_7_enable_10), .CLK(clk_out1), .OFX0(n3118), .Q1(state_1), 
    .OFX1(n3251));
  SLICE_82 SLICE_82( .C1(state_2), .B1(state_0), .A1(state_3), .D0(n5), 
    .C0(state_1), .B0(n3114), .A0(n2935), .DI0(n3249), 
    .CE(clk_out1_N_7_enable_10), .CLK(clk_out1), .F0(n3249), .Q0(state_2), 
    .F1(n5));
  SLICE_83 SLICE_83( .D1(state_0), .C1(state_4_N_120_1), .B1(state_2), 
    .A1(state_3), .C0(n46), .B0(state_2), .A0(state_3), .DI0(n6532), 
    .M0(state_1), .CE(clk_out1_N_7_enable_20), .CLK(clk_out1), .OFX0(n6532), 
    .Q0(state_3));
  SLICE_84 SLICE_84( .B1(n19), .A1(count_31_N_257_6), .D0(n16_adj_625), 
    .C0(n64_adj_645), .B0(state_3), .A0(n20_adj_725), .DI0(count_31_N_8_6), 
    .CLK(clk_out1), .F0(count_31_N_8_6), .Q0(state_4_N_105_2), 
    .F1(n20_adj_725));
  SLICE_85 SLICE_85( .B1(n19), .A1(count_31_N_257_10), .D0(n16_adj_597), 
    .C0(n64_adj_665), .B0(state_3), .A0(n20_adj_596), .DI0(count_31_N_8_10), 
    .CLK(clk_out1), .F0(count_31_N_8_10), .Q0(state_4_N_110_0), 
    .F1(n20_adj_596));
  SLICE_86 SLICE_86( .B1(n19), .A1(count_31_N_257_3), .D0(n22), .C0(state_3), 
    .B0(n8_adj_653), .A0(n26), .DI0(count_31_N_8_3), .CLK(clk_out1), 
    .F0(count_31_N_8_3), .Q0(state_4_N_120_1), .F1(n26));
  SLICE_87 SLICE_87( .B1(n19), .A1(count_31_N_257_5), .D0(n16_adj_732), 
    .C0(n64_adj_644), .B0(state_3), .A0(n20_adj_695), .DI0(count_31_N_8_5), 
    .CLK(clk_out1), .F0(count_31_N_8_5), .Q0(state_4_N_125_0), 
    .F1(n20_adj_695));
  SLICE_88 SLICE_88( .B1(n19), .A1(count_31_N_257_9), .D0(n16_adj_593), 
    .C0(n64_adj_659), .B0(state_3), .A0(n20_adj_592), .DI0(count_31_N_8_9), 
    .CLK(clk_out1), .F0(count_31_N_8_9), .Q0(state_4_N_95_0), .F1(n20_adj_592));
  i4459_SLICE_89 \i4459/SLICE_89 ( .D1(n3686), .C1(state_4_N_135_0), 
    .B1(state_0), .A1(state_2), .C0(state_0), .B0(state_2), 
    .A0(state_4_N_95_0), .M0(state_3), .OFX0(n7220));
  i20_SLICE_90 \i20/SLICE_90 ( .D1(count_31_N_257_31), .C1(state_4_N_110_0), 
    .B1(n7), .A1(state_1), .C0(state_4_N_80_1), .B0(count_31), .A0(state_1), 
    .M0(state_2), .OFX0(n57_adj_755));
  i20_adj_85_SLICE_91 \i20_adj_85/SLICE_91 ( .D1(count_31_N_257_29), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_29), .A0(state_1), .M0(state_2), .OFX0(n57_adj_749));
  i20_adj_87_SLICE_92 \i20_adj_87/SLICE_92 ( .D1(count_31_N_257_30), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_30), .A0(state_1), .M0(state_2), .OFX0(n57_adj_753));
  i20_adj_90_SLICE_93 \i20_adj_90/SLICE_93 ( .D1(count_31_N_257_27), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_27), .A0(state_1), .M0(state_2), .OFX0(n57_adj_741));
  i20_adj_93_SLICE_94 \i20_adj_93/SLICE_94 ( .D1(count_31_N_257_28), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_28), .A0(state_1), .M0(state_2), .OFX0(n57_adj_745));
  mux_1030_i3_SLICE_95 \mux_1030_i3/SLICE_95 ( .D1(n3686), .C1(state_0), 
    .B1(state_3), .A1(state_4_N_105_2), .D0(n10), .C0(n5679), .B0(n5669), 
    .A0(state_4_N_105_2), .M0(state_2), .OFX0(n2935));
  i20_adj_96_SLICE_96 \i20_adj_96/SLICE_96 ( .D1(count_31_N_257_25), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_25), .A0(state_1), .M0(state_2), .OFX0(n57_adj_736));
  i20_adj_98_SLICE_97 \i20_adj_98/SLICE_97 ( .D1(count_31_N_257_26), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_26), .A0(state_1), .M0(state_2), .OFX0(n57_adj_738));
  i20_adj_104_SLICE_98 \i20_adj_104/SLICE_98 ( .D1(count_31_N_257_23), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_23), .A0(state_1), .M0(state_2), .OFX0(n57_adj_724));
  i20_adj_106_SLICE_99 \i20_adj_106/SLICE_99 ( .D1(count_31_N_257_24), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_24), .A0(state_1), .M0(state_2), .OFX0(n57_adj_729));
  i1337_SLICE_100 \i1337/SLICE_100 ( .D1(n7), .C1(state_4_N_120_1), 
    .B1(state_2), .A1(state_3), .D0(n3685), .C0(state_3), .B0(n6509), 
    .A0(state_4_N_105_2), .M0(n5700), .OFX0(n3260));
  i20_adj_110_SLICE_101 \i20_adj_110/SLICE_101 ( .D1(count_31_N_257_21), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_21), .A0(state_1), .M0(state_2), .OFX0(n57_adj_714));
  i20_adj_112_SLICE_102 \i20_adj_112/SLICE_102 ( .D1(count_31_N_257_22), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_22), .A0(state_1), .M0(state_2), .OFX0(n57_adj_717));
  i3075_SLICE_103 \i3075/SLICE_103 ( .D1(n6499), .C1(state_4_N_105_2), 
    .B1(state_3), .A1(state_1), .C0(state_4_N_130_1), .B0(state_3), 
    .A0(state_1), .M0(state_2), .OFX0(n5200));
  i20_adj_118_SLICE_104 \i20_adj_118/SLICE_104 ( .D1(count_31_N_257_19), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_19), .A0(state_1), .M0(state_2), .OFX0(n57_adj_704));
  i20_adj_122_SLICE_105 \i20_adj_122/SLICE_105 ( .D1(count_31_N_257_20), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_20), .A0(state_1), .M0(state_2), .OFX0(n57_adj_712));
  i20_adj_124_SLICE_106 \i20_adj_124/SLICE_106 ( .D1(count_31_N_257_17), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_17), .A0(state_1), .M0(state_2), .OFX0(n57_adj_694));
  i20_adj_126_SLICE_107 \i20_adj_126/SLICE_107 ( .D1(count_31_N_257_18), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_18), .A0(state_1), .M0(state_2), .OFX0(n57_adj_697));
  i20_adj_128_SLICE_108 \i20_adj_128/SLICE_108 ( .D1(count_31_N_257_16), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_16), .A0(state_1), .M0(state_2), .OFX0(n57_adj_691));
  i1192_SLICE_109 \i1192/SLICE_109 ( .B1(state_4_N_130_1), .A1(state_0), 
    .D0(n3079), .C0(state_2), .B0(state_4_N_120_1), .A0(state_0), .M0(state_3), 
    .OFX0(n3114));
  i20_adj_134_SLICE_110 \i20_adj_134/SLICE_110 ( .D1(count_31_N_257_15), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_15), .A0(state_1), .M0(state_2), .OFX0(n57_adj_686));
  i20_adj_137_SLICE_111 \i20_adj_137/SLICE_111 ( .D1(count_31_N_257_13), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_13), .A0(state_1), .M0(state_2), .OFX0(n57_adj_679));
  i20_adj_139_SLICE_112 \i20_adj_139/SLICE_112 ( .D1(count_31_N_257_14), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_14), .A0(state_1), .M0(state_2), .OFX0(n57_adj_683));
  i20_adj_141_SLICE_113 \i20_adj_141/SLICE_113 ( .D1(count_31_N_257_11), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_11), .A0(state_1), .M0(state_2), .OFX0(n57_adj_670));
  i20_adj_144_SLICE_114 \i20_adj_144/SLICE_114 ( .D1(count_31_N_257_12), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_12), .A0(state_1), .M0(state_2), .OFX0(n57_adj_676));
  i20_adj_146_SLICE_115 \i20_adj_146/SLICE_115 ( .D1(count_31_N_257_9), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(state_4_N_95_0), .A0(state_1), .M0(state_2), .OFX0(n57_adj_660));
  i21_SLICE_116 \i21/SLICE_116 ( .D1(count_31_N_257_10), .C1(n7), 
    .B1(state_4_N_110_0), .A1(state_1), .C0(state_4_N_110_0), .B0(state_1), 
    .A0(state_4_N_80_1), .M0(state_2), .OFX0(n57_adj_666));
  i20_adj_151_SLICE_117 \i20_adj_151/SLICE_117 ( .D1(count_31_N_257_8), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_8), .A0(state_1), .M0(state_2), .OFX0(n57_adj_657));
  i20_adj_154_SLICE_118 \i20_adj_154/SLICE_118 ( .D1(count_31_N_257_7), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(count_7), .A0(state_1), .M0(state_2), .OFX0(n57_adj_652));
  i20_adj_156_SLICE_119 \i20_adj_156/SLICE_119 ( .D1(count_31_N_257_6), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(state_4_N_105_2), .A0(state_1), .M0(state_2), .OFX0(n57_adj_647));
  i20_adj_158_SLICE_120 \i20_adj_158/SLICE_120 ( .D1(count_31_N_257_5), 
    .C1(state_4_N_110_0), .B1(n7), .A1(state_1), .C0(state_4_N_80_1), 
    .B0(state_4_N_125_0), .A0(state_1), .M0(state_2), .OFX0(n57));
  i4010_SLICE_121 \i4010/SLICE_121 ( .D1(state_4_N_105_2), .C1(state_0), 
    .B1(state_1), .A1(state_3), .D0(state_0), .C0(n6508), .B0(state_1), 
    .A0(state_3), .M0(state_2), .OFX0(clk_out1_N_7_enable_20));
  i4014_SLICE_122 \i4014/SLICE_122 ( .C1(ResCScount_3), .B1(ResCScount_0), 
    .A1(Resbitcount_0), .C0(Resbitcount_0), .B0(ResCScount_1), 
    .A0(ResCScount_2), .M0(Resbitcount_1), .OFX0(ResSDI1_N_576));
  SLICE_123 SLICE_123( .D1(state_1), .C1(state_0), .B1(state_2), 
    .A1(state_4_N_95_0), .D0(n5596), .C0(n57_adj_724), .B0(count_31_N_257_23), 
    .A0(state_0), .F0(n16_adj_750), .F1(n5596));
  SLICE_124 SLICE_124( .D1(state_2), .C1(n4_adj_773), .B1(n6507), 
    .A1(count_31_N_257_2), .D0(n5596), .C0(n6495), .B0(count_31_N_257_2), 
    .A0(state_0), .F0(n16_adj_764), .F1(n6495));
  SLICE_125 SLICE_125( .D1(state_2), .C1(n4_adj_772), .B1(n6507), 
    .A1(count_31_N_257_1), .D0(n5596), .C0(n6496), .B0(count_31_N_257_1), 
    .A0(state_0), .F0(n16_adj_700), .F1(n6496));
  SLICE_126 SLICE_126( .D1(state_1), .C1(state_0), .B1(state_2), .A1(state_3), 
    .D0(state_0), .C0(n6526), .B0(n6508), .A0(n7), .F0(n3451), .F1(n6526));
  SLICE_127 SLICE_127( .D1(n5596), .C1(n6494), .B1(count_31_N_257_4), 
    .A1(state_0), .D0(state_2), .C0(n4_adj_771), .B0(n6507), 
    .A0(count_31_N_257_4), .F0(n6494), .F1(n16_adj_735));
  SLICE_128 SLICE_128( .D1(n5596), .C1(n6498), .B1(count_31_N_257_3), 
    .A1(state_0), .D0(state_2), .C0(n4_adj_770), .B0(n6507), 
    .A0(count_31_N_257_3), .F0(n6498), .F1(n22));
  SLICE_129 SLICE_129( .D1(state_2), .C1(n4_adj_775), .B1(n6507), 
    .A1(count_31_N_257_0), .D0(n5596), .C0(n6497), .B0(count_31_N_257_0), 
    .A0(state_0), .F0(n16_adj_746), .F1(n6497));
  SLICE_130 SLICE_130( .D1(n3685), .C1(n6509), .B1(n6500), .A1(count_1), 
    .D0(countcur_6), .C0(count_1), .B0(n6501), .A0(count_4), .F0(n3685), 
    .F1(n3686));
  SLICE_131 SLICE_131( .D1(n6504), .C1(state_4__N_73), .B1(n33), 
    .A1(state_4_N_120_1), .B0(n19), .A0(count_31_N_257_23), .F0(n20_adj_692), 
    .F1(n19));
  SLICE_132 SLICE_132( .D1(n6521), .C1(n5954), .B1(n4_adj_719), .A1(n6506), 
    .D0(state_3), .C0(state_2), .B0(state_0), .A0(state_1), .F0(n6506), 
    .F1(clk_out1_N_7_enable_10));
  SLICE_133 SLICE_133( .D1(state_2), .C1(state_3), .B1(state_1), .A1(state_0), 
    .B0(n63_adj_646), .A0(count_2), .F0(n64_adj_589), .F1(n63_adj_646));
  SLICE_134 SLICE_134( .D1(count_0), .C1(state_4_N_105_2), .B1(n3406), 
    .A1(state_4_N_120_1), .D0(n40_adj_720), .C0(n39), .B0(n50), .A0(n45), 
    .F0(n3406), .F1(n5644));
  SLICE_135 SLICE_135( .B1(state_4_N_95_0), .A1(count_27), .D0(n30), .C0(n42), 
    .B0(n48), .A0(n29), .F0(n50), .F1(n30));
  SLICE_136 SLICE_136( .D1(Resbitcount_0), .C1(Resbitcount_2), 
    .B1(Resbitcount_1), .A1(Resbitcount_3), .C0(state_1), .B0(state_4_N_110_0), 
    .A0(n7), .F0(n6507), .F1(n7));
  SLICE_137 SLICE_137( .B1(count_24), .A1(count_17), .D0(count_11), 
    .C0(n34_adj_759), .B0(n44), .A0(count_8), .F0(n48), .F1(n34_adj_759));
  SLICE_138 SLICE_138( .D1(state_4_N_125_0), .C1(state_2), 
    .B1(state_4_N_135_0), .A1(state_1), .D0(count_4), .C0(count_1), .B0(n5644), 
    .A0(count_2), .F0(state_4_N_135_0), .F1(n5148));
  SLICE_139 SLICE_139( .D1(ResCScount_3), .C1(ResCScount_1), .B1(ResCScount_0), 
    .A1(ResCScount_2), .C0(state_4_N_80_1), .B0(count_1), .A0(state_1), 
    .F0(n4_adj_772), .F1(state_4_N_80_1));
  SLICE_140 SLICE_140( .D1(state_2), .C1(state_3), .B1(state_1), .A1(state_0), 
    .D0(n5953), .C0(Resbitcount_2), .B0(Resbitcount_0), .A0(n6513), .F0(n5954), 
    .F1(n5953));
  SLICE_141 SLICE_141( .B1(state_3), .A1(state_2), .D0(DataOut_c), 
    .C0(ADSout8_c), .B0(n6523), .A0(n6515), .F0(Sout2_c), .F1(n6523));
  SLICE_142 SLICE_142( .B1(state_0), .A1(state_1), .D0(DataOut_c), 
    .C0(ADSout7_c), .B0(n6523), .A0(n6515), .F0(Sout4_c), .F1(n6515));
  SLICE_143 SLICE_143( .C1(count_4), .B1(n5644), .A1(count_2), .D0(n5632), 
    .C0(count_1), .B0(n6500), .A0(n6509), .F0(n3657), .F1(n6500));
  SLICE_144 SLICE_144( .D1(read_count_1), .C1(read_count_2), .B1(read_count_4), 
    .A1(read_count_3), .D0(count_1), .C0(n6509), .B0(n6501), .A0(count_4), 
    .F0(n46), .F1(n6509));
  SLICE_145 SLICE_145( .C1(state_0), .B1(n6508), .A1(state_4_N_80_1), 
    .D0(Resbitcount_0), .C0(Resbitcount_2), .B0(Resbitcount_1), 
    .A0(Resbitcount_3), .F0(n6508), .F1(n3079));
  SLICE_146 SLICE_146( .D1(n6516), .C1(count_4), .B1(n4_adj_601), 
    .A1(ResCScount_1), .B0(state_4_N_120_1), .A0(ResCScount_0), .F0(n6516), 
    .F1(n5053));
  SLICE_147 SLICE_147( .D1(n6523), .C1(state_0), .B1(n46), .A1(state_1), 
    .B0(countcur_6), .A0(clk_out1_N_7_enable_26), .F0(n3455), 
    .F1(clk_out1_N_7_enable_26));
  SLICE_148 SLICE_148( .D1(n6518), .C1(state_2), .B1(state_0), 
    .A1(state_4_N_80_1), .B0(state_3), .A0(state_1), .F0(n6518), .F1(n2784));
  SLICE_149 SLICE_149( .D1(state_2), .C1(state_3), .B1(state_0), .A1(state_1), 
    .D0(count_1), .C0(n5632), .B0(n6501), .A0(count_4), 
    .F0(clk_out1_N_7_enable_14), .F1(n5632));
  SLICE_150 SLICE_150( .C1(count_1), .B1(count_2), .A1(count_0), .D0(n3252), 
    .C0(ResSDI1_N_580_3), .B0(n5053), .A0(ResStep), .F0(n86), .F1(n3252));
  SLICE_151 SLICE_151( .D1(n5644), .C1(count_4), .B1(count_2), .A1(count_1), 
    .D0(count_4), .C0(count_1), .B0(n5644), .A0(count_2), .F0(n6499), 
    .F1(state_4_N_130_1));
  SLICE_152 SLICE_152( .C1(state_4_N_80_1), .B1(count_2), .A1(state_1), 
    .C0(state_4_N_80_1), .B0(count_0), .A0(state_1), .F0(n4_adj_775), 
    .F1(n4_adj_773));
  SLICE_153 SLICE_153( .D1(n5596), .C1(n57_adj_729), .B1(count_31_N_257_24), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_717), .B0(count_31_N_257_22), 
    .A0(state_0), .F0(n16_adj_639), .F1(n16_adj_763));
  SLICE_154 SLICE_154( .D1(n5596), .C1(n57_adj_704), .B1(count_31_N_257_19), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_714), .B0(count_31_N_257_21), 
    .A0(state_0), .F0(n16_adj_699), .F1(n16_adj_658));
  SLICE_155 SLICE_155( .D1(n5596), .C1(n57_adj_736), .B1(count_31_N_257_25), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_755), .B0(count_31_N_257_31), 
    .A0(state_0), .F0(n16_adj_748), .F1(n16_adj_648));
  SLICE_156 SLICE_156( .D1(n5596), .C1(n57), .B1(count_31_N_257_5), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_697), .B0(count_31_N_257_18), 
    .A0(state_0), .F0(n16_adj_708), .F1(n16_adj_732));
  SLICE_157 SLICE_157( .D1(n5596), .C1(n57_adj_647), .B1(count_31_N_257_6), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_694), .B0(count_31_N_257_17), 
    .A0(state_0), .F0(n16_adj_671), .F1(n16_adj_625));
  SLICE_158 SLICE_158( .C1(state_4_N_80_1), .B1(state_4_N_120_1), .A1(state_1), 
    .C0(count_4), .B0(state_4_N_80_1), .A0(state_1), .F0(n4_adj_771), 
    .F1(n4_adj_770));
  SLICE_159 SLICE_159( .D1(n5596), .C1(n57_adj_738), .B1(count_31_N_257_26), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_753), .B0(count_31_N_257_30), 
    .A0(state_0), .F0(n16_adj_731), .F1(n16_adj_628));
  SLICE_160 SLICE_160( .D1(n5596), .C1(n57_adj_652), .B1(count_31_N_257_7), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_691), .B0(count_31_N_257_16), 
    .A0(state_0), .F0(n16_adj_621), .F1(n16));
  SLICE_161 SLICE_161( .D1(n5596), .C1(n57_adj_657), .B1(count_31_N_257_8), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_712), .B0(count_31_N_257_20), 
    .A0(state_0), .F0(n16_adj_637), .F1(n16_adj_635));
  SLICE_162 SLICE_162( .D1(n5596), .C1(n57_adj_741), .B1(count_31_N_257_27), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_686), .B0(count_31_N_257_15), 
    .A0(state_0), .F0(n16_adj_636), .F1(n16_adj_687));
  SLICE_163 SLICE_163( .D1(n5596), .C1(n57_adj_660), .B1(count_31_N_257_9), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_683), .B0(count_31_N_257_14), 
    .A0(state_0), .F0(n16_adj_617), .F1(n16_adj_593));
  SLICE_164 SLICE_164( .D1(n5596), .C1(n57_adj_666), .B1(count_31_N_257_10), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_679), .B0(count_31_N_257_13), 
    .A0(state_0), .F0(n16_adj_613), .F1(n16_adj_597));
  SLICE_165 SLICE_165( .D1(n5596), .C1(n57_adj_745), .B1(count_31_N_257_28), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_749), .B0(count_31_N_257_29), 
    .A0(state_0), .F0(n16_adj_711), .F1(n16_adj_669));
  SLICE_166 SLICE_166( .D1(n5596), .C1(n57_adj_670), .B1(count_31_N_257_11), 
    .A1(state_0), .D0(n5596), .C0(n57_adj_676), .B0(count_31_N_257_12), 
    .A0(state_0), .F0(n16_adj_605), .F1(n16_adj_611));
  SLICE_167 SLICE_167( .B1(n63_adj_646), .A1(state_4_N_110_0), .D0(count_20), 
    .C0(count_29), .B0(state_4_N_110_0), .A0(count_28), .F0(n45), 
    .F1(n64_adj_665));
  SLICE_168 SLICE_168( .B1(n63_adj_646), .A1(state_4_N_120_1), 
    .B0(n63_adj_646), .A0(count_23), .F0(n64_adj_722), .F1(n8_adj_653));
  SLICE_169 SLICE_169( .B1(n63_adj_646), .A1(count_26), .B0(count_26), 
    .A0(count_18), .F0(n39), .F1(n64_adj_737));
  SLICE_170 SLICE_170( .B1(ResClkE), .A1(clk_out1), .B0(Clk), .A0(clk_out1), 
    .F0(Clk4_c), .F1(ResClk_c));
  SLICE_171 SLICE_171( .B1(n63_adj_646), .A1(count_13), .D0(count_30), 
    .C0(count_16), .B0(count_13), .A0(count_21), .F0(n40_adj_720), 
    .F1(n64_adj_678));
  SLICE_172 SLICE_172( .B1(n63_adj_646), .A1(count_19), .B0(count_19), 
    .A0(count_12), .F0(n29), .F1(n64_adj_702));
  SLICE_173 SLICE_173( .B1(n63_adj_646), .A1(state_4_N_125_0), .D0(count_22), 
    .C0(state_4_N_125_0), .B0(count_31), .A0(count_15), .F0(n42), 
    .F1(n64_adj_644));
  SLICE_174 SLICE_174( .B1(n19), .A1(count_31_N_257_2), .B0(n19), 
    .A0(count_31_N_257_1), .F0(n20_adj_663), .F1(n20_adj_760));
  SLICE_175 SLICE_175( .B1(n63_adj_646), .A1(count_25), .D0(count_14), 
    .C0(count_7), .B0(count_23), .A0(count_25), .F0(n44), .F1(n64_adj_734));
  SLICE_176 SLICE_176( .B1(n63_adj_646), .A1(count_4), .B0(n63_adj_646), 
    .A0(count_1), .F0(n64), .F1(n64_adj_643));
  SLICE_177 SLICE_177( .B1(Resbitcount_0), .A1(Resbitcount_1), 
    .B0(Resbitcount_1), .A0(Resbitcount_3), .F0(n6513), .F1(n6519));
  SLICE_178 SLICE_178( .B1(n19), .A1(count_31_N_257_4), .B0(n19), 
    .A0(count_31_N_257_22), .F0(n20_adj_765), .F1(n20_adj_727));
  SLICE_179 SLICE_179( .B1(n63_adj_646), .A1(count_24), .B0(n63_adj_646), 
    .A0(count_22), .F0(n64_adj_716), .F1(n64_adj_728));
  SLICE_180 SLICE_180( .B1(n19), .A1(count_31_N_257_24), .B0(n19), 
    .A0(count_31_N_257_21), .F0(n20_adj_689), .F1(n20_adj_672));
  SLICE_181 SLICE_181( .B1(n63_adj_646), .A1(state_4_N_105_2), 
    .B0(n63_adj_646), .A0(count_21), .F0(n64_adj_713), .F1(n64_adj_645));
  SLICE_182 SLICE_182( .B1(n63_adj_646), .A1(count_7), .B0(n63_adj_646), 
    .A0(count_31), .F0(n64_adj_754), .F1(n64_adj_651));
  SLICE_183 SLICE_183( .B1(n19), .A1(count_31_N_257_25), .B0(n19), 
    .A0(count_31_N_257_20), .F0(n20_adj_640), .F1(n20_adj_642));
  SLICE_184 SLICE_184( .B1(n19), .A1(count_31_N_257_7), .B0(n19), 
    .A0(count_31_N_257_0), .F0(n20_adj_718), .F1(n20_adj_638));
  SLICE_185 SLICE_185( .B1(n63_adj_646), .A1(count_8), .B0(n63_adj_646), 
    .A0(count_0), .F0(n64_adj_629), .F1(n64_adj_656));
  SLICE_186 SLICE_186( .B1(n19), .A1(count_31_N_257_26), .B0(n19), 
    .A0(count_31_N_257_18), .F0(n20_adj_701), .F1(n20));
  SLICE_187 SLICE_187( .B1(n63_adj_646), .A1(count_27), .B0(n63_adj_646), 
    .A0(count_18), .F0(n64_adj_696), .F1(n64_adj_740));
  SLICE_188 SLICE_188( .B1(n19), .A1(count_31_N_257_8), .B0(n19), 
    .A0(count_31_N_257_17), .F0(n20_adj_709), .F1(n20_adj_595));
  SLICE_189 SLICE_189( .B1(n63_adj_646), .A1(state_4_N_95_0), .B0(n63_adj_646), 
    .A0(count_17), .F0(n64_adj_693), .F1(n64_adj_659));
  SLICE_190 SLICE_190( .B1(n19), .A1(count_31_N_257_19), .B0(n19), 
    .A0(count_31_N_257_30), .F0(n20_adj_723), .F1(n20_adj_733));
  SLICE_191 SLICE_191( .B1(n63_adj_646), .A1(count_28), .B0(n63_adj_646), 
    .A0(count_30), .F0(n64_adj_752), .F1(n64_adj_744));
  SLICE_192 SLICE_192( .B1(n63_adj_646), .A1(count_11), .B0(n63_adj_646), 
    .A0(count_20), .F0(n64_adj_710), .F1(n64_adj_668));
  SLICE_193 SLICE_193( .B1(n19), .A1(count_31_N_257_27), .B0(n19), 
    .A0(count_31_N_257_16), .F0(n20_adj_620), .F1(n20_adj_682));
  SLICE_194 SLICE_194( .B1(n63_adj_646), .A1(count_12), .B0(n63_adj_646), 
    .A0(count_16), .F0(n64_adj_690), .F1(n64_adj_675));
  SLICE_195 SLICE_195( .B1(n19), .A1(count_31_N_257_11), .B0(n19), 
    .A0(count_31_N_257_15), .F0(n20_adj_627), .F1(n20_adj_610));
  SLICE_196 SLICE_196( .B1(n63_adj_646), .A1(count_29), .B0(n63_adj_646), 
    .A0(count_15), .F0(n64_adj_685), .F1(n64_adj_747));
  SLICE_197 SLICE_197( .B1(n19), .A1(count_31_N_257_28), .B0(n19), 
    .A0(count_31_N_257_14), .F0(n20_adj_616), .F1(n20_adj_661));
  SLICE_198 SLICE_198( .B1(n19), .A1(count_31_N_257_12), .B0(n19), 
    .A0(count_31_N_257_29), .F0(n20_adj_698), .F1(n20_adj_603));
  SLICE_199 SLICE_199( .B1(n3406), .A1(count_4), .B0(n5644), .A0(count_2), 
    .F0(n6501), .F1(n10));
  SLICE_200 SLICE_200( .B1(n19), .A1(count_31_N_257_13), .B0(state_4_N_120_1), 
    .A0(ResCScount_0), .F0(ResSDI1_N_580_3), .F1(n20_adj_612));
  SLICE_201 SLICE_201( .F0(GND_net));
  Clk3 Clk3_I( .PADDO(Clk4_c), .Clk3(Clk3));
  ADClk1 ADClk1_I( .PADDO(ADClk3_c), .ADClk1(ADClk1));
  Clk2 Clk2_I( .PADDO(Clk4_c), .Clk2(Clk2));
  Clk1 Clk1_I( .PADDO(Clk4_c), .Clk1(Clk1));
  RS4 RS4_I( .PADDO(GND_net), .RS4(RS4));
  RS3 RS3_I( .PADDO(RS7_c), .RS3(RS3));
  Sin16 Sin16_I( .PADDO(Sin16_c), .Sin16(Sin16));
  Rst1 Rst1_I( .PADDO(Rst2_c), .Rst1(Rst1));
  Sin15 Sin15_I( .PADDO(Sin16_c), .Sin15(Sin15));
  Sin14 Sin14_I( .PADDO(Sin16_c), .Sin14(Sin14));
  Sin12 Sin12_I( .PADDO(Sin16_c), .Sin12(Sin12));
  Sin11 Sin11_I( .PADDO(Sin16_c), .Sin11(Sin11));
  RS2 RS2_I( .PADDO(RS6_c), .RS2(RS2));
  RS1 RS1_I( .PADDO(RS5_c), .RS1(RS1));
  Sin10 Sin10_I( .PADDO(Sin16_c), .Sin10(Sin10));
  Clk4 Clk4_I( .PADDO(Clk4_c), .Clk4(Clk4));
  ADMode_1 ADMode_1_I( .PADDO(ADMode_3_c), .ADMode_1(ADMode_1));
  RS8 RS8_I( .PADDO(GND_net), .RS8(RS8));
  ADRst3 ADRst3_I( .PADDO(ADRst3_c), .ADRst3(ADRst3));
  ADRst2 ADRst2_I( .PADDO(ADRst3_c), .ADRst2(ADRst2));
  ADRst1 ADRst1_I( .PADDO(ADRst3_c), .ADRst1(ADRst1));
  ADMode1_3 ADMode1_3_I( .PADDO(ADMode1_3_c), .ADMode1_3(ADMode1_3));
  ADMode1_2 ADMode1_2_I( .PADDO(ADMode1_3_c), .ADMode1_2(ADMode1_2));
  ADMode1_1 ADMode1_1_I( .PADDO(ADMode1_3_c), .ADMode1_1(ADMode1_1));
  RS7 RS7_I( .PADDO(RS7_c), .RS7(RS7));
  Sin9 Sin9_I( .PADDO(Sin16_c), .Sin9(Sin9));
  Sin8 Sin8_I( .PADDO(Sin8_c), .Sin8(Sin8));
  ADClk2 ADClk2_I( .PADDO(ADClk3_c), .ADClk2(ADClk2));
  ADMode_3 ADMode_3_I( .PADDO(ADMode_3_c), .ADMode_3(ADMode_3));
  Sin7 Sin7_I( .PADDO(Sin8_c), .Sin7(Sin7));
  Sin6 Sin6_I( .PADDO(Sin8_c), .Sin6(Sin6));
  Sin5 Sin5_I( .PADDO(Sin8_c), .Sin5(Sin5));
  ADClk3 ADClk3_I( .PADDO(ADClk3_c), .ADClk3(ADClk3));
  Sin4 Sin4_I( .PADDO(Sin16_c), .Sin4(Sin4));
  Sin3 Sin3_I( .PADDO(Sin16_c), .Sin3(Sin3));
  Sin2 Sin2_I( .PADDO(Sin16_c), .Sin2(Sin2));
  Sin1 Sin1_I( .PADDO(Sin16_c), .Sin1(Sin1));
  PhaseA4 PhaseA4_I( .PADDO(PhaseA4_c), .PhaseA4(PhaseA4));
  PhaseA2 PhaseA2_I( .PADDO(PhaseA4_c), .PhaseA2(PhaseA2));
  PhaseC4 PhaseC4_I( .PADDO(PhaseC4_c), .PhaseC4(PhaseC4));
  PhaseC3 PhaseC3_I( .PADDO(PhaseC4_c), .PhaseC3(PhaseC3));
  PhaseC2 PhaseC2_I( .PADDO(PhaseC4_c), .PhaseC2(PhaseC2));
  PhaseC1 PhaseC1_I( .PADDO(PhaseC4_c), .PhaseC1(PhaseC1));
  DebugP3 DebugP3_I( .PADDO(VCC_net), .DebugP3(DebugP3));
  DebugP2 DebugP2_I( .PADDO(DebugP2_c), .DebugP2(DebugP2));
  p1 p1_I( .PADDO(PhaseC4_c), .p1(p1));
  AD0 AD0_I( .PADDO(GND_net), .AD0(AD0));
  Rst Rst_I( .PADDO(Rst2_c), .Rst(Rst));
  PhaseA1 PhaseA1_I( .PADDO(PhaseA4_c), .PhaseA1(PhaseA1));
  Rst2 Rst2_I( .PADDO(Rst2_c), .Rst2(Rst2));
  RS6 RS6_I( .PADDO(RS6_c), .RS6(RS6));
  RS5 RS5_I( .PADDO(RS5_c), .RS5(RS5));
  ADMode_2 ADMode_2_I( .PADDO(ADMode_3_c), .ADMode_2(ADMode_2));
  AD1 AD1_I( .PADDO(GND_net), .AD1(AD1));
  Sout1 Sout1_I( .PADDO(ClkOut_c), .Sout1(Sout1));
  Sout2 Sout2_I( .PADDO(Sout2_c), .Sout2(Sout2));
  Sout3 Sout3_I( .PADDO(Sout3_c_0), .Sout3(Sout3));
  Sout4 Sout4_I( .PADDO(Sout4_c), .Sout4(Sout4));
  ClkOut ClkOut_I( .PADDO(ClkOut_c), .ClkOut(ClkOut));
  DataOut DataOut_I( .PADDO(DataOut_c), .DataOut(DataOut));
  ResCS1 ResCS1_I( .PADDO(GND_net), .ResCS1(ResCS1));
  ResCS2 ResCS2_I( .PADDO(GND_net), .ResCS2(ResCS2));
  ResCS3 ResCS3_I( .PADDO(GND_net), .ResCS3(ResCS3));
  ResCS4 ResCS4_I( .PADDO(GND_net), .ResCS4(ResCS4));
  ResCS5 ResCS5_I( .PADDO(GND_net), .ResCS5(ResCS5));
  ResCS6 ResCS6_I( .PADDO(GND_net), .ResCS6(ResCS6));
  ResCS7 ResCS7_I( .PADDO(ResCS7_c), .ResCS7(ResCS7));
  ResCS8 ResCS8_I( .PADDO(GND_net), .ResCS8(ResCS8));
  ResClk ResClk_I( .PADDO(ResClk_c), .ResClk(ResClk));
  ResSDI1 ResSDI1_I( .PADDO(ResSDI2_c), .ResSDI1(ResSDI1));
  ResSDI2 ResSDI2_I( .PADDO(ResSDI2_c), .ResSDI2(ResSDI2));
  ADSout7 ADSout7_I( .PADDI(ADSout7_c), .ADSout7(ADSout7));
  ADSout8 ADSout8_I( .PADDI(ADSout8_c), .ADSout8(ADSout8));
  OSC_in OSC_in_I( .PADDI(OSC_in_c), .OSC_in(OSC_in));
  p_PLLInst_0 \p/PLLInst_0 ( .CLKI(OSC_in_c), .CLKFB(clk_out1), 
    .CLKOP(clk_out1));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCC_net));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module SLICE_0 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre countcur_814_1023__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre countcur_814_1023__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20001 countcur_814_1023_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_2 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre countcur_814_1023__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre countcur_814_1023__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20001 countcur_814_1023_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_3 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_4 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_5 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_6 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20003 add_29_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_7 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_8 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20004 add_2660_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0aaa;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_9 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre countcur_814_1023__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  ccu20005 countcur_814_1023_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_10 ( input A1, output FCO );
  wire   GNDI;

  ccu20006 add_2660_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_11 ( input A0, FCI, output F1 );
  wire   GNDI;

  ccu20007 add_2660_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_12 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_13 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20008 add_29_33( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_14 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_15 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_16 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_17 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_18 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_19 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_20 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_21 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_22 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_23 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_31( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_24 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_25 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_29( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_26 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_27 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_28 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_27( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_29 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_30 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_25( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_31 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_23( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_32 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_21( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_33 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre countcur_814_1023__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre countcur_814_1023__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  ccu20001 countcur_814_1023_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_34 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_35 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_36 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 add_2660_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_37 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_29_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_38 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, LSR, CLK, output 
    OFX0, Q0 );
  wire   GNDI, \SLICE_38/SLICE_38_K1_H1 , \SLICE_38/i25/GATE_H0 , VCCI, 
         CLK_NOTIN, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut4 SLICE_38_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_38/SLICE_38_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40009 \i25/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_38/i25/GATE_H0 ));
  vmuxregsre ADClk_329( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  selmux2 SLICE_38_K0K1MUX( .D0(\SLICE_38/i25/GATE_H0 ), 
    .D1(\SLICE_38/SLICE_38_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SLICE_39 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40010 i2_3_lut_rep_96( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40011 i3742_2_lut_rep_104_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0012 ADMode1_331( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0012 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module SLICE_40 ( input B1, A1, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40013 i1_2_lut_adj_167( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 i2_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0012 ADMode_330( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_41 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40015 i1_2_lut_rep_119( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 i1_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 ADRst_328( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0280) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_42 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40017 i3758_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 state_4__I_0_385_i10_1_lut_2_lut_3_lut_4_lut( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 Clk_314( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_43 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40019 i3645_2_lut_rep_115( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 state_3__bdd_4_lut_3774( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre ClkOut_334( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h08A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_44 ( input C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40021 i2_3_lut_adj_40( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40022 i1_4_lut_adj_39( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre DataOut_335( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_45 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40023 i1294_2_lut_3_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 state_4__I_0_389_i9_2_lut_rep_98_2_lut_3_lut_4_lut( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 DebugP2_316( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_46 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40025 i1_4_lut_adj_24( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i1_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 PhaseA1_312( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_47 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40027 i38_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40023 i3748_2_lut_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0012 PhaseC1_315( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_48 ( input C0, B0, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40028 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 i3730_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0012 RS5_324( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_49 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40030 i1_2_lut_adj_149( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40031 i1_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0012 RS6_325( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_50 ( input C1, B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40032 i2_3_lut_rep_116( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 i2_3_lut_adj_41( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0012 RS7_326( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_51 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40033 i3752_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 i2033_3_lut_rep_97_4_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0012 ResCS_341( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1104) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFE7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_52 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40035 i1_4_lut_adj_43( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 i1161_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre ResCScount__i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0344) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_53 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40037 i969_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 i962_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre ResCScount__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre ResCScount__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_54 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40038 i107_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i976_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre ResCScount__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB44B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_55 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40024 i1_2_lut_rep_105_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40040 i2034_1_lut_3_lut_4_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0012 ResClkE_342( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0018) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_56 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, LSR, CLK, 
    output OFX0, Q0 );
  wire   \SLICE_56/SLICE_56_K1_H1 , \SLICE_56/i94/GATE_H0 , VCCI, CLK_NOTIN, 
         DI0_dly, CLK_dly, LSR_dly;

  lut40041 SLICE_56_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_56/SLICE_56_K1_H1 ));
  lut40041 \i94/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_56/i94/GATE_H0 ));
  vmuxregsre ResSDI1_343( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 SLICE_56_K0K1MUX( .D0(\SLICE_56/i94/GATE_H0 ), 
    .D1(\SLICE_56/SLICE_56_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_57 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40019 state_4__I_0_385_i8_2_lut_rep_118( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 i1_3_lut_4_lut_adj_92( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 ResStep_339( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_58 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40042 i2266_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 i2106_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0012 Resbitcount_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0012 Resbitcount_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6060) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_59 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40044 i2262_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 i2263_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 Resbitcount_i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 Resbitcount_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_60 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40046 i3745_2_lut_2_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40047 state_4__I_0_384_i9_2_lut_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0048 Rst_313( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0048 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module SLICE_61 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40030 i3649_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 count_2__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre Sin3_318( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCEAD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_62 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40030 i3639_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 mux_456_Mux_0_i15_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre Sin6_319( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4850) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_63 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_86( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_64 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_223( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_234( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_65 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_194( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_200( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_66 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_164( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_173( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_67 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_147( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_157( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_68 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_129( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_140( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_69 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_107( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_114( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i18( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i17( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_70 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_89( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_183( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i20( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i19( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_44( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_57( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i22( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i21( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_220( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_236( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i24( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i23( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_73 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_199( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_212( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i26( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i25( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_171( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_187( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i28( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i27( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_75 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 i2_4_lut_adj_97( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 i2_4_lut_adj_153( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i30( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 count_i29( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_76 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40030 i1_2_lut_adj_82( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i2_4_lut_adj_81( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i31( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_77 ( input B1, A1, A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40013 i2673_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i1925_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre read_count_815__i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre read_count_815__i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_78 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40053 i2687_2_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40037 i2680_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre read_count_815__i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre read_count_815__i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h78F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_79 ( input B1, A1, D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40030 i2676_2_lut_rep_114( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i2694_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre read_count_815__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_80 ( input C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, FXB, FXA, CE, 
    CLK, output OFX0, Q1, OFX1 );
  wire   GNDI, \SLICE_80/i4457/GATE_H1 , \SLICE_80/SLICE_80_K0_H0 , VCCI, 
         CLK_NOTIN, DI1_dly, CLK_dly, CE_dly;

  lut40054 \i4457/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_80/i4457/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 SLICE_80_K0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_80/SLICE_80_K0_H0 ));
  vmuxregsre0012 state__i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 SLICE_80_K0K1MUX( .D0(\SLICE_80/SLICE_80_K0_H0 ), 
    .D1(\SLICE_80/i4457/GATE_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_80_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0BCB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_81 ( input B1, A1, D0, C0, B0, A0, DI1, M1, M0, FXB, FXA, CE, CLK, 
    output OFX0, Q1, OFX1 );
  wire   GNDI, \SLICE_81/i1196/GATE_H1 , \SLICE_81/SLICE_81_K0_H0 , VCCI, 
         CLK_NOTIN, DI1_dly, CLK_dly, CE_dly;

  lut40056 \i1196/GATE ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_81/i1196/GATE_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 SLICE_81_K0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_81/SLICE_81_K0_H0 ));
  vmuxregsre0012 state__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 SLICE_81_K0K1MUX( .D0(\SLICE_81/SLICE_81_K0_H0 ), 
    .D1(\SLICE_81/i1196/GATE_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_81_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5D4C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_82 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40058 i1_2_lut_3_lut_adj_61( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 i1326_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 state__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_83 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_83/SLICE_83_K1_H1 , GNDI, \SLICE_83/i4012/GATE_H0 , VCCI, 
         CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40059 SLICE_83_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_83/SLICE_83_K1_H1 ));
  lut40060 \i4012/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_83/i4012/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0012 state__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 SLICE_83_K0K1MUX( .D0(\SLICE_83/i4012/GATE_H0 ), 
    .D1(\SLICE_83/SLICE_83_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_84 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40030 i1_2_lut_adj_209( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i2_4_lut_adj_207( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_85 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40030 i1_2_lut_adj_181( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i2_4_lut_adj_180( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_86 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40030 i1_2_lut_adj_230( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 i2_4_lut_adj_229( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_87 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40030 i1_2_lut_adj_214( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i2_4_lut_adj_213( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_88 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40030 i1_2_lut_adj_186( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i2_4_lut_adj_185( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0012 count_i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module i4459_SLICE_89 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i4459/SLICE_89/i4459/SLICE_89_K1_H1 , GNDI, 
         \i4459/SLICE_89/i4459/GATE_H0 ;

  lut40062 \i4459/SLICE_89_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i4459/SLICE_89/i4459/SLICE_89_K1_H1 ));
  lut40063 \i4459/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i4459/SLICE_89/i4459/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i4459/SLICE_89_K0K1MUX ( .D0(\i4459/SLICE_89/i4459/GATE_H0 ), 
    .D1(\i4459/SLICE_89/i4459/SLICE_89_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA820) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3232) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i20_SLICE_90 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i20/SLICE_90/i20/SLICE_90_K1_H1 , GNDI, \i20/SLICE_90/i20/GATE_H0 ;

  lut40064 \i20/SLICE_90_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20/SLICE_90/i20/SLICE_90_K1_H1 ));
  lut40065 \i20/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20/SLICE_90/i20/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20/SLICE_90_K0K1MUX ( .D0(\i20/SLICE_90/i20/GATE_H0 ), 
    .D1(\i20/SLICE_90/i20/SLICE_90_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4E00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i20_adj_85_SLICE_91 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i20_adj_85/SLICE_91/i20_adj_85/SLICE_91_K1_H1 , GNDI, 
         \i20_adj_85/SLICE_91/i20_adj_85/GATE_H0 ;

  lut40064 \i20_adj_85/SLICE_91_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_85/SLICE_91/i20_adj_85/SLICE_91_K1_H1 ));
  lut40065 \i20_adj_85/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_85/SLICE_91/i20_adj_85/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_85/SLICE_91_K0K1MUX ( 
    .D0(\i20_adj_85/SLICE_91/i20_adj_85/GATE_H0 ), 
    .D1(\i20_adj_85/SLICE_91/i20_adj_85/SLICE_91_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_87_SLICE_92 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i20_adj_87/SLICE_92/i20_adj_87/SLICE_92_K1_H1 , GNDI, 
         \i20_adj_87/SLICE_92/i20_adj_87/GATE_H0 ;

  lut40064 \i20_adj_87/SLICE_92_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_87/SLICE_92/i20_adj_87/SLICE_92_K1_H1 ));
  lut40065 \i20_adj_87/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_87/SLICE_92/i20_adj_87/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_87/SLICE_92_K0K1MUX ( 
    .D0(\i20_adj_87/SLICE_92/i20_adj_87/GATE_H0 ), 
    .D1(\i20_adj_87/SLICE_92/i20_adj_87/SLICE_92_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_90_SLICE_93 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i20_adj_90/SLICE_93/i20_adj_90/SLICE_93_K1_H1 , GNDI, 
         \i20_adj_90/SLICE_93/i20_adj_90/GATE_H0 ;

  lut40064 \i20_adj_90/SLICE_93_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_90/SLICE_93/i20_adj_90/SLICE_93_K1_H1 ));
  lut40065 \i20_adj_90/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_90/SLICE_93/i20_adj_90/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_90/SLICE_93_K0K1MUX ( 
    .D0(\i20_adj_90/SLICE_93/i20_adj_90/GATE_H0 ), 
    .D1(\i20_adj_90/SLICE_93/i20_adj_90/SLICE_93_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_93_SLICE_94 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i20_adj_93/SLICE_94/i20_adj_93/SLICE_94_K1_H1 , GNDI, 
         \i20_adj_93/SLICE_94/i20_adj_93/GATE_H0 ;

  lut40064 \i20_adj_93/SLICE_94_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_93/SLICE_94/i20_adj_93/SLICE_94_K1_H1 ));
  lut40065 \i20_adj_93/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_93/SLICE_94/i20_adj_93/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_93/SLICE_94_K0K1MUX ( 
    .D0(\i20_adj_93/SLICE_94/i20_adj_93/GATE_H0 ), 
    .D1(\i20_adj_93/SLICE_94/i20_adj_93/SLICE_94_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mux_1030_i3_SLICE_95 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, 
    output OFX0 );
  wire   \mux_1030_i3/SLICE_95/mux_1030_i3/SLICE_95_K1_H1 , 
         \mux_1030_i3/SLICE_95/mux_1030_i3/GATE_H0 ;

  lut40066 \mux_1030_i3/SLICE_95_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\mux_1030_i3/SLICE_95/mux_1030_i3/SLICE_95_K1_H1 ));
  lut40067 \mux_1030_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\mux_1030_i3/SLICE_95/mux_1030_i3/GATE_H0 ));
  selmux2 \mux_1030_i3/SLICE_95_K0K1MUX ( 
    .D0(\mux_1030_i3/SLICE_95/mux_1030_i3/GATE_H0 ), 
    .D1(\mux_1030_i3/SLICE_95/mux_1030_i3/SLICE_95_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEC2C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i20_adj_96_SLICE_96 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i20_adj_96/SLICE_96/i20_adj_96/SLICE_96_K1_H1 , GNDI, 
         \i20_adj_96/SLICE_96/i20_adj_96/GATE_H0 ;

  lut40064 \i20_adj_96/SLICE_96_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_96/SLICE_96/i20_adj_96/SLICE_96_K1_H1 ));
  lut40065 \i20_adj_96/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_96/SLICE_96/i20_adj_96/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_96/SLICE_96_K0K1MUX ( 
    .D0(\i20_adj_96/SLICE_96/i20_adj_96/GATE_H0 ), 
    .D1(\i20_adj_96/SLICE_96/i20_adj_96/SLICE_96_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_98_SLICE_97 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i20_adj_98/SLICE_97/i20_adj_98/SLICE_97_K1_H1 , GNDI, 
         \i20_adj_98/SLICE_97/i20_adj_98/GATE_H0 ;

  lut40064 \i20_adj_98/SLICE_97_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_98/SLICE_97/i20_adj_98/SLICE_97_K1_H1 ));
  lut40065 \i20_adj_98/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_98/SLICE_97/i20_adj_98/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_98/SLICE_97_K0K1MUX ( 
    .D0(\i20_adj_98/SLICE_97/i20_adj_98/GATE_H0 ), 
    .D1(\i20_adj_98/SLICE_97/i20_adj_98/SLICE_97_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_104_SLICE_98 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_104/SLICE_98/i20_adj_104/SLICE_98_K1_H1 , GNDI, 
         \i20_adj_104/SLICE_98/i20_adj_104/GATE_H0 ;

  lut40064 \i20_adj_104/SLICE_98_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_104/SLICE_98/i20_adj_104/SLICE_98_K1_H1 ));
  lut40065 \i20_adj_104/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_104/SLICE_98/i20_adj_104/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_104/SLICE_98_K0K1MUX ( 
    .D0(\i20_adj_104/SLICE_98/i20_adj_104/GATE_H0 ), 
    .D1(\i20_adj_104/SLICE_98/i20_adj_104/SLICE_98_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_106_SLICE_99 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_106/SLICE_99/i20_adj_106/SLICE_99_K1_H1 , GNDI, 
         \i20_adj_106/SLICE_99/i20_adj_106/GATE_H0 ;

  lut40064 \i20_adj_106/SLICE_99_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_106/SLICE_99/i20_adj_106/SLICE_99_K1_H1 ));
  lut40065 \i20_adj_106/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_106/SLICE_99/i20_adj_106/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_106/SLICE_99_K0K1MUX ( 
    .D0(\i20_adj_106/SLICE_99/i20_adj_106/GATE_H0 ), 
    .D1(\i20_adj_106/SLICE_99/i20_adj_106/SLICE_99_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i1337_SLICE_100 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i1337/SLICE_100/i1337/SLICE_100_K1_H1 , 
         \i1337/SLICE_100/i1337/GATE_H0 ;

  lut40068 \i1337/SLICE_100_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i1337/SLICE_100/i1337/SLICE_100_K1_H1 ));
  lut40069 \i1337/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i1337/SLICE_100/i1337/GATE_H0 ));
  selmux2 \i1337/SLICE_100_K0K1MUX ( .D0(\i1337/SLICE_100/i1337/GATE_H0 ), 
    .D1(\i1337/SLICE_100/i1337/SLICE_100_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2064) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0ACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i20_adj_110_SLICE_101 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_110/SLICE_101/i20_adj_110/SLICE_101_K1_H1 , GNDI, 
         \i20_adj_110/SLICE_101/i20_adj_110/GATE_H0 ;

  lut40064 \i20_adj_110/SLICE_101_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_110/SLICE_101/i20_adj_110/SLICE_101_K1_H1 ));
  lut40065 \i20_adj_110/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_110/SLICE_101/i20_adj_110/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_110/SLICE_101_K0K1MUX ( 
    .D0(\i20_adj_110/SLICE_101/i20_adj_110/GATE_H0 ), 
    .D1(\i20_adj_110/SLICE_101/i20_adj_110/SLICE_101_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_112_SLICE_102 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_112/SLICE_102/i20_adj_112/SLICE_102_K1_H1 , GNDI, 
         \i20_adj_112/SLICE_102/i20_adj_112/GATE_H0 ;

  lut40064 \i20_adj_112/SLICE_102_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_112/SLICE_102/i20_adj_112/SLICE_102_K1_H1 ));
  lut40065 \i20_adj_112/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_112/SLICE_102/i20_adj_112/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_112/SLICE_102_K0K1MUX ( 
    .D0(\i20_adj_112/SLICE_102/i20_adj_112/GATE_H0 ), 
    .D1(\i20_adj_112/SLICE_102/i20_adj_112/SLICE_102_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i3075_SLICE_103 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i3075/SLICE_103/i3075/SLICE_103_K1_H1 , GNDI, 
         \i3075/SLICE_103/i3075/GATE_H0 ;

  lut40070 \i3075/SLICE_103_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i3075/SLICE_103/i3075/SLICE_103_K1_H1 ));
  lut40065 \i3075/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i3075/SLICE_103/i3075/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i3075/SLICE_103_K0K1MUX ( .D0(\i3075/SLICE_103/i3075/GATE_H0 ), 
    .D1(\i3075/SLICE_103/i3075/SLICE_103_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0145) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i20_adj_118_SLICE_104 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_118/SLICE_104/i20_adj_118/SLICE_104_K1_H1 , GNDI, 
         \i20_adj_118/SLICE_104/i20_adj_118/GATE_H0 ;

  lut40064 \i20_adj_118/SLICE_104_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_118/SLICE_104/i20_adj_118/SLICE_104_K1_H1 ));
  lut40065 \i20_adj_118/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_118/SLICE_104/i20_adj_118/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_118/SLICE_104_K0K1MUX ( 
    .D0(\i20_adj_118/SLICE_104/i20_adj_118/GATE_H0 ), 
    .D1(\i20_adj_118/SLICE_104/i20_adj_118/SLICE_104_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_122_SLICE_105 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_122/SLICE_105/i20_adj_122/SLICE_105_K1_H1 , GNDI, 
         \i20_adj_122/SLICE_105/i20_adj_122/GATE_H0 ;

  lut40064 \i20_adj_122/SLICE_105_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_122/SLICE_105/i20_adj_122/SLICE_105_K1_H1 ));
  lut40065 \i20_adj_122/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_122/SLICE_105/i20_adj_122/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_122/SLICE_105_K0K1MUX ( 
    .D0(\i20_adj_122/SLICE_105/i20_adj_122/GATE_H0 ), 
    .D1(\i20_adj_122/SLICE_105/i20_adj_122/SLICE_105_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_124_SLICE_106 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_124/SLICE_106/i20_adj_124/SLICE_106_K1_H1 , GNDI, 
         \i20_adj_124/SLICE_106/i20_adj_124/GATE_H0 ;

  lut40064 \i20_adj_124/SLICE_106_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_124/SLICE_106/i20_adj_124/SLICE_106_K1_H1 ));
  lut40065 \i20_adj_124/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_124/SLICE_106/i20_adj_124/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_124/SLICE_106_K0K1MUX ( 
    .D0(\i20_adj_124/SLICE_106/i20_adj_124/GATE_H0 ), 
    .D1(\i20_adj_124/SLICE_106/i20_adj_124/SLICE_106_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_126_SLICE_107 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_126/SLICE_107/i20_adj_126/SLICE_107_K1_H1 , GNDI, 
         \i20_adj_126/SLICE_107/i20_adj_126/GATE_H0 ;

  lut40064 \i20_adj_126/SLICE_107_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_126/SLICE_107/i20_adj_126/SLICE_107_K1_H1 ));
  lut40065 \i20_adj_126/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_126/SLICE_107/i20_adj_126/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_126/SLICE_107_K0K1MUX ( 
    .D0(\i20_adj_126/SLICE_107/i20_adj_126/GATE_H0 ), 
    .D1(\i20_adj_126/SLICE_107/i20_adj_126/SLICE_107_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_128_SLICE_108 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_128/SLICE_108/i20_adj_128/SLICE_108_K1_H1 , GNDI, 
         \i20_adj_128/SLICE_108/i20_adj_128/GATE_H0 ;

  lut40064 \i20_adj_128/SLICE_108_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_128/SLICE_108/i20_adj_128/SLICE_108_K1_H1 ));
  lut40065 \i20_adj_128/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_128/SLICE_108/i20_adj_128/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_128/SLICE_108_K0K1MUX ( 
    .D0(\i20_adj_128/SLICE_108/i20_adj_128/GATE_H0 ), 
    .D1(\i20_adj_128/SLICE_108/i20_adj_128/SLICE_108_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i1192_SLICE_109 ( input B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i1192/SLICE_109/i1192/SLICE_109_K1_H1 , 
         \i1192/SLICE_109/i1192/GATE_H0 ;

  lut40071 \i1192/SLICE_109_K1 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\i1192/SLICE_109/i1192/SLICE_109_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 \i1192/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i1192/SLICE_109/i1192/GATE_H0 ));
  selmux2 \i1192/SLICE_109_K0K1MUX ( .D0(\i1192/SLICE_109/i1192/GATE_H0 ), 
    .D1(\i1192/SLICE_109/i1192/SLICE_109_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h707F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i20_adj_134_SLICE_110 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_134/SLICE_110/i20_adj_134/SLICE_110_K1_H1 , GNDI, 
         \i20_adj_134/SLICE_110/i20_adj_134/GATE_H0 ;

  lut40064 \i20_adj_134/SLICE_110_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_134/SLICE_110/i20_adj_134/SLICE_110_K1_H1 ));
  lut40065 \i20_adj_134/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_134/SLICE_110/i20_adj_134/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_134/SLICE_110_K0K1MUX ( 
    .D0(\i20_adj_134/SLICE_110/i20_adj_134/GATE_H0 ), 
    .D1(\i20_adj_134/SLICE_110/i20_adj_134/SLICE_110_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_137_SLICE_111 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_137/SLICE_111/i20_adj_137/SLICE_111_K1_H1 , GNDI, 
         \i20_adj_137/SLICE_111/i20_adj_137/GATE_H0 ;

  lut40064 \i20_adj_137/SLICE_111_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_137/SLICE_111/i20_adj_137/SLICE_111_K1_H1 ));
  lut40065 \i20_adj_137/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_137/SLICE_111/i20_adj_137/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_137/SLICE_111_K0K1MUX ( 
    .D0(\i20_adj_137/SLICE_111/i20_adj_137/GATE_H0 ), 
    .D1(\i20_adj_137/SLICE_111/i20_adj_137/SLICE_111_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_139_SLICE_112 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_139/SLICE_112/i20_adj_139/SLICE_112_K1_H1 , GNDI, 
         \i20_adj_139/SLICE_112/i20_adj_139/GATE_H0 ;

  lut40064 \i20_adj_139/SLICE_112_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_139/SLICE_112/i20_adj_139/SLICE_112_K1_H1 ));
  lut40065 \i20_adj_139/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_139/SLICE_112/i20_adj_139/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_139/SLICE_112_K0K1MUX ( 
    .D0(\i20_adj_139/SLICE_112/i20_adj_139/GATE_H0 ), 
    .D1(\i20_adj_139/SLICE_112/i20_adj_139/SLICE_112_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_141_SLICE_113 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_141/SLICE_113/i20_adj_141/SLICE_113_K1_H1 , GNDI, 
         \i20_adj_141/SLICE_113/i20_adj_141/GATE_H0 ;

  lut40064 \i20_adj_141/SLICE_113_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_141/SLICE_113/i20_adj_141/SLICE_113_K1_H1 ));
  lut40065 \i20_adj_141/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_141/SLICE_113/i20_adj_141/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_141/SLICE_113_K0K1MUX ( 
    .D0(\i20_adj_141/SLICE_113/i20_adj_141/GATE_H0 ), 
    .D1(\i20_adj_141/SLICE_113/i20_adj_141/SLICE_113_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_144_SLICE_114 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_144/SLICE_114/i20_adj_144/SLICE_114_K1_H1 , GNDI, 
         \i20_adj_144/SLICE_114/i20_adj_144/GATE_H0 ;

  lut40064 \i20_adj_144/SLICE_114_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_144/SLICE_114/i20_adj_144/SLICE_114_K1_H1 ));
  lut40065 \i20_adj_144/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_144/SLICE_114/i20_adj_144/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_144/SLICE_114_K0K1MUX ( 
    .D0(\i20_adj_144/SLICE_114/i20_adj_144/GATE_H0 ), 
    .D1(\i20_adj_144/SLICE_114/i20_adj_144/SLICE_114_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_146_SLICE_115 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_146/SLICE_115/i20_adj_146/SLICE_115_K1_H1 , GNDI, 
         \i20_adj_146/SLICE_115/i20_adj_146/GATE_H0 ;

  lut40064 \i20_adj_146/SLICE_115_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_146/SLICE_115/i20_adj_146/SLICE_115_K1_H1 ));
  lut40065 \i20_adj_146/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_146/SLICE_115/i20_adj_146/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_146/SLICE_115_K0K1MUX ( 
    .D0(\i20_adj_146/SLICE_115/i20_adj_146/GATE_H0 ), 
    .D1(\i20_adj_146/SLICE_115/i20_adj_146/SLICE_115_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i21_SLICE_116 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i21/SLICE_116/i21/SLICE_116_K1_H1 , GNDI, 
         \i21/SLICE_116/i21/GATE_H0 ;

  lut40073 \i21/SLICE_116_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i21/SLICE_116/i21/SLICE_116_K1_H1 ));
  lut40065 \i21/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i21/SLICE_116/i21/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i21/SLICE_116_K0K1MUX ( .D0(\i21/SLICE_116/i21/GATE_H0 ), 
    .D1(\i21/SLICE_116/i21/SLICE_116_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i20_adj_151_SLICE_117 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_151/SLICE_117/i20_adj_151/SLICE_117_K1_H1 , GNDI, 
         \i20_adj_151/SLICE_117/i20_adj_151/GATE_H0 ;

  lut40064 \i20_adj_151/SLICE_117_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_151/SLICE_117/i20_adj_151/SLICE_117_K1_H1 ));
  lut40065 \i20_adj_151/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_151/SLICE_117/i20_adj_151/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_151/SLICE_117_K0K1MUX ( 
    .D0(\i20_adj_151/SLICE_117/i20_adj_151/GATE_H0 ), 
    .D1(\i20_adj_151/SLICE_117/i20_adj_151/SLICE_117_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_154_SLICE_118 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_154/SLICE_118/i20_adj_154/SLICE_118_K1_H1 , GNDI, 
         \i20_adj_154/SLICE_118/i20_adj_154/GATE_H0 ;

  lut40064 \i20_adj_154/SLICE_118_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_154/SLICE_118/i20_adj_154/SLICE_118_K1_H1 ));
  lut40065 \i20_adj_154/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_154/SLICE_118/i20_adj_154/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_154/SLICE_118_K0K1MUX ( 
    .D0(\i20_adj_154/SLICE_118/i20_adj_154/GATE_H0 ), 
    .D1(\i20_adj_154/SLICE_118/i20_adj_154/SLICE_118_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_156_SLICE_119 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_156/SLICE_119/i20_adj_156/SLICE_119_K1_H1 , GNDI, 
         \i20_adj_156/SLICE_119/i20_adj_156/GATE_H0 ;

  lut40064 \i20_adj_156/SLICE_119_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_156/SLICE_119/i20_adj_156/SLICE_119_K1_H1 ));
  lut40065 \i20_adj_156/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_156/SLICE_119/i20_adj_156/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_156/SLICE_119_K0K1MUX ( 
    .D0(\i20_adj_156/SLICE_119/i20_adj_156/GATE_H0 ), 
    .D1(\i20_adj_156/SLICE_119/i20_adj_156/SLICE_119_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i20_adj_158_SLICE_120 ( input D1, C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   \i20_adj_158/SLICE_120/i20_adj_158/SLICE_120_K1_H1 , GNDI, 
         \i20_adj_158/SLICE_120/i20_adj_158/GATE_H0 ;

  lut40064 \i20_adj_158/SLICE_120_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i20_adj_158/SLICE_120/i20_adj_158/SLICE_120_K1_H1 ));
  lut40065 \i20_adj_158/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i20_adj_158/SLICE_120/i20_adj_158/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i20_adj_158/SLICE_120_K0K1MUX ( 
    .D0(\i20_adj_158/SLICE_120/i20_adj_158/GATE_H0 ), 
    .D1(\i20_adj_158/SLICE_120/i20_adj_158/SLICE_120_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i4010_SLICE_121 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i4010/SLICE_121/i4010/SLICE_121_K1_H1 , 
         \i4010/SLICE_121/i4010/GATE_H0 ;

  lut40074 \i4010/SLICE_121_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i4010/SLICE_121/i4010/SLICE_121_K1_H1 ));
  lut40075 \i4010/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i4010/SLICE_121/i4010/GATE_H0 ));
  selmux2 \i4010/SLICE_121_K0K1MUX ( .D0(\i4010/SLICE_121/i4010/GATE_H0 ), 
    .D1(\i4010/SLICE_121/i4010/SLICE_121_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7464) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9DCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i4014_SLICE_122 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i4014/SLICE_122/i4014/SLICE_122_K1_H1 , 
         \i4014/SLICE_122/i4014/GATE_H0 ;

  lut40076 \i4014/SLICE_122_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i4014/SLICE_122/i4014/SLICE_122_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \i4014/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i4014/SLICE_122/i4014/GATE_H0 ));
  selmux2 \i4014/SLICE_122_K0K1MUX ( .D0(\i4014/SLICE_122/i4014/GATE_H0 ), 
    .D1(\i4014/SLICE_122/i4014/SLICE_122_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_123 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40078 i1_4_lut_adj_115( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0031) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDC50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_124 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40080 count_31__N_257_2__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40079 i1_4_lut_adj_8( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_125 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40080 count_31__N_257_1__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40079 i1_4_lut_adj_20( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_126 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40081 i1_2_lut_rep_120( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 i1519_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_127 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_228( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 count_31__N_257_4__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_128 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_233( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 count_31__N_257_3__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_129 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40080 count_31__N_257_0__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40079 i1_4_lut_adj_113( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_130 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40083 i1755_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 i2_3_lut_4_lut_adj_121( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD0D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_131 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40085 i1_4_lut_adj_119( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 i1_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_132 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40086 i3755_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40087 i3741_4_lut_rep_100_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0501) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_133 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40088 i112_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 i1_2_lut_adj_6( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC028) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_134 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40047 i3_4_lut_adj_201( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 i25_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_135 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40019 i4_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i24_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_136 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40089 i2_3_lut_4_lut_adj_42( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 i21_3_lut_rep_101( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3A3A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_137 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40019 i8_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i22_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_138 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40091 i3119_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40092 i2_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h101A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_139 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40093 i2_4_lut_adj_152( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40094 i1_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_140 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40011 n7_bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40095 ResCS8_c_bdd_2_lut_3991_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_141 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_rep_117( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 DataOut_I_0_414_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF780) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_142 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40097 i3738_2_lut_rep_109( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 DataOut_I_0_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_143 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 i1_2_lut_rep_94_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_144 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40047 i1_2_lut_rep_103_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40100 i65_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_145 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40101 mux_1027_i3_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 i3661_3_lut_rep_102_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_146 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40102 i2_4_lut_adj_166( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 i1086_2_lut_rep_110( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h63C6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_147 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40023 i4_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 i1536_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_148 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40103 i3_4_lut_adj_73( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40104 i2_2_lut_rep_112( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_149 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40023 i1_2_lut_3_lut_4_lut_adj_123( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40100 i1_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_150 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40105 i1329_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 i93_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1212) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1D14) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_151 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40093 i3_4_lut_adj_78( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 i1_2_lut_rep_93_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_152 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40094 i1_3_lut_adj_231( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 i1_3_lut_adj_49( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_153 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_225( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_50( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_154 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_221( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_68( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_155 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_219( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_84( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_156 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_216( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_111( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_157 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_211( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_120( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_158 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40094 i1_3_lut_adj_168( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 i1_3_lut_adj_130( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_159 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_208( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_131( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_160 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_206( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_136( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_161 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_198( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_138( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_192( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_145( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_163 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_190( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_150( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_164 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_184( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_162( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_165 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_179( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_163( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_166 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40079 i1_4_lut_adj_178( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1_4_lut_adj_170( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_167 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_182( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i19_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_168 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_232( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_7( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_169 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_203( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i13_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_170 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i2018_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i2017_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_171 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_160( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i14_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_172 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_195( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i3_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_173 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_215( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i16_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_174 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_235( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_12( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_175 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_218( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i18_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_176 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_227( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_14( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_177 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i935_2_lut_rep_113( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 i3653_2_lut_rep_107( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_178 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_226( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_46( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_179 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_224( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_48( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_180 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_222( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_64( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_181 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_210( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_67( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_182 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_205( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_83( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_183 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_217( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_99( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_184 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_204( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_101( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_185 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_197( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_105( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_186 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_202( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_108( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_187 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_191( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_109( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_188 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_196( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_116( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_189 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_189( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_117( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_190 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_193( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_125( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_191 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_177( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_127( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_192 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_176( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_132( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_193 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_188( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_133( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_194 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_169( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_135( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_195 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_175( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_142( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_196 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_161( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_143( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_197 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_172( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_148( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_198 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_165( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 i1_2_lut_adj_155( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_199 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40019 i3_2_lut_adj_77( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 i1_2_lut_rep_95( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_200 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i1_2_lut_adj_159( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40013 i1_2_lut_adj_174( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_201 ( output F0 );
  wire   GNDI;

  lut40108 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module Clk3 ( input PADDO, output Clk3 );

  xo2iobuf Clk3_pad( .I(PADDO), .PAD(Clk3));

  specify
    (PADDO => Clk3) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, output PAD );

  OB INST5( .I(I), .O(PAD));
endmodule

module ADClk1 ( input PADDO, output ADClk1 );

  xo2iobuf ADClk1_pad( .I(PADDO), .PAD(ADClk1));

  specify
    (PADDO => ADClk1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Clk2 ( input PADDO, output Clk2 );

  xo2iobuf Clk2_pad( .I(PADDO), .PAD(Clk2));

  specify
    (PADDO => Clk2) = (0:0:0,0:0:0);
  endspecify

endmodule

module Clk1 ( input PADDO, output Clk1 );

  xo2iobuf Clk1_pad( .I(PADDO), .PAD(Clk1));

  specify
    (PADDO => Clk1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RS4 ( input PADDO, output RS4 );

  xo2iobuf RS4_pad( .I(PADDO), .PAD(RS4));

  specify
    (PADDO => RS4) = (0:0:0,0:0:0);
  endspecify

endmodule

module RS3 ( input PADDO, output RS3 );

  xo2iobuf RS3_pad( .I(PADDO), .PAD(RS3));

  specify
    (PADDO => RS3) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin16 ( input PADDO, output Sin16 );

  xo2iobuf Sin16_pad( .I(PADDO), .PAD(Sin16));

  specify
    (PADDO => Sin16) = (0:0:0,0:0:0);
  endspecify

endmodule

module Rst1 ( input PADDO, output Rst1 );

  xo2iobuf Rst1_pad( .I(PADDO), .PAD(Rst1));

  specify
    (PADDO => Rst1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin15 ( input PADDO, output Sin15 );

  xo2iobuf Sin15_pad( .I(PADDO), .PAD(Sin15));

  specify
    (PADDO => Sin15) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin14 ( input PADDO, output Sin14 );

  xo2iobuf Sin14_pad( .I(PADDO), .PAD(Sin14));

  specify
    (PADDO => Sin14) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin12 ( input PADDO, output Sin12 );

  xo2iobuf Sin12_pad( .I(PADDO), .PAD(Sin12));

  specify
    (PADDO => Sin12) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin11 ( input PADDO, output Sin11 );

  xo2iobuf Sin11_pad( .I(PADDO), .PAD(Sin11));

  specify
    (PADDO => Sin11) = (0:0:0,0:0:0);
  endspecify

endmodule

module RS2 ( input PADDO, output RS2 );

  xo2iobuf RS2_pad( .I(PADDO), .PAD(RS2));

  specify
    (PADDO => RS2) = (0:0:0,0:0:0);
  endspecify

endmodule

module RS1 ( input PADDO, output RS1 );

  xo2iobuf RS1_pad( .I(PADDO), .PAD(RS1));

  specify
    (PADDO => RS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin10 ( input PADDO, output Sin10 );

  xo2iobuf Sin10_pad( .I(PADDO), .PAD(Sin10));

  specify
    (PADDO => Sin10) = (0:0:0,0:0:0);
  endspecify

endmodule

module Clk4 ( input PADDO, output Clk4 );

  xo2iobuf Clk4_pad( .I(PADDO), .PAD(Clk4));

  specify
    (PADDO => Clk4) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADMode_1 ( input PADDO, output ADMode_1 );

  xo2iobuf ADMode_1_pad( .I(PADDO), .PAD(ADMode_1));

  specify
    (PADDO => ADMode_1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RS8 ( input PADDO, output RS8 );

  xo2iobuf RS8_pad( .I(PADDO), .PAD(RS8));

  specify
    (PADDO => RS8) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADRst3 ( input PADDO, output ADRst3 );

  xo2iobuf ADRst3_pad( .I(PADDO), .PAD(ADRst3));

  specify
    (PADDO => ADRst3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADRst2 ( input PADDO, output ADRst2 );

  xo2iobuf ADRst2_pad( .I(PADDO), .PAD(ADRst2));

  specify
    (PADDO => ADRst2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADRst1 ( input PADDO, output ADRst1 );

  xo2iobuf ADRst1_pad( .I(PADDO), .PAD(ADRst1));

  specify
    (PADDO => ADRst1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADMode1_3 ( input PADDO, output ADMode1_3 );

  xo2iobuf ADMode1_3_pad( .I(PADDO), .PAD(ADMode1_3));

  specify
    (PADDO => ADMode1_3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADMode1_2 ( input PADDO, output ADMode1_2 );

  xo2iobuf ADMode1_2_pad( .I(PADDO), .PAD(ADMode1_2));

  specify
    (PADDO => ADMode1_2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADMode1_1 ( input PADDO, output ADMode1_1 );

  xo2iobuf ADMode1_1_pad( .I(PADDO), .PAD(ADMode1_1));

  specify
    (PADDO => ADMode1_1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RS7 ( input PADDO, output RS7 );

  xo2iobuf RS7_pad( .I(PADDO), .PAD(RS7));

  specify
    (PADDO => RS7) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin9 ( input PADDO, output Sin9 );

  xo2iobuf Sin9_pad( .I(PADDO), .PAD(Sin9));

  specify
    (PADDO => Sin9) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin8 ( input PADDO, output Sin8 );

  xo2iobuf Sin8_pad( .I(PADDO), .PAD(Sin8));

  specify
    (PADDO => Sin8) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADClk2 ( input PADDO, output ADClk2 );

  xo2iobuf ADClk2_pad( .I(PADDO), .PAD(ADClk2));

  specify
    (PADDO => ADClk2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADMode_3 ( input PADDO, output ADMode_3 );

  xo2iobuf ADMode_3_pad( .I(PADDO), .PAD(ADMode_3));

  specify
    (PADDO => ADMode_3) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin7 ( input PADDO, output Sin7 );

  xo2iobuf Sin7_pad( .I(PADDO), .PAD(Sin7));

  specify
    (PADDO => Sin7) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin6 ( input PADDO, output Sin6 );

  xo2iobuf Sin6_pad( .I(PADDO), .PAD(Sin6));

  specify
    (PADDO => Sin6) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin5 ( input PADDO, output Sin5 );

  xo2iobuf Sin5_pad( .I(PADDO), .PAD(Sin5));

  specify
    (PADDO => Sin5) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADClk3 ( input PADDO, output ADClk3 );

  xo2iobuf ADClk3_pad( .I(PADDO), .PAD(ADClk3));

  specify
    (PADDO => ADClk3) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin4 ( input PADDO, output Sin4 );

  xo2iobuf Sin4_pad( .I(PADDO), .PAD(Sin4));

  specify
    (PADDO => Sin4) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin3 ( input PADDO, output Sin3 );

  xo2iobuf Sin3_pad( .I(PADDO), .PAD(Sin3));

  specify
    (PADDO => Sin3) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin2 ( input PADDO, output Sin2 );

  xo2iobuf Sin2_pad( .I(PADDO), .PAD(Sin2));

  specify
    (PADDO => Sin2) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sin1 ( input PADDO, output Sin1 );

  xo2iobuf Sin1_pad( .I(PADDO), .PAD(Sin1));

  specify
    (PADDO => Sin1) = (0:0:0,0:0:0);
  endspecify

endmodule

module PhaseA4 ( input PADDO, output PhaseA4 );

  xo2iobuf PhaseA4_pad( .I(PADDO), .PAD(PhaseA4));

  specify
    (PADDO => PhaseA4) = (0:0:0,0:0:0);
  endspecify

endmodule

module PhaseA2 ( input PADDO, output PhaseA2 );

  xo2iobuf PhaseA2_pad( .I(PADDO), .PAD(PhaseA2));

  specify
    (PADDO => PhaseA2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PhaseC4 ( input PADDO, output PhaseC4 );

  xo2iobuf PhaseC4_pad( .I(PADDO), .PAD(PhaseC4));

  specify
    (PADDO => PhaseC4) = (0:0:0,0:0:0);
  endspecify

endmodule

module PhaseC3 ( input PADDO, output PhaseC3 );

  xo2iobuf PhaseC3_pad( .I(PADDO), .PAD(PhaseC3));

  specify
    (PADDO => PhaseC3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PhaseC2 ( input PADDO, output PhaseC2 );

  xo2iobuf PhaseC2_pad( .I(PADDO), .PAD(PhaseC2));

  specify
    (PADDO => PhaseC2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PhaseC1 ( input PADDO, output PhaseC1 );

  xo2iobuf PhaseC1_pad( .I(PADDO), .PAD(PhaseC1));

  specify
    (PADDO => PhaseC1) = (0:0:0,0:0:0);
  endspecify

endmodule

module DebugP3 ( input PADDO, output DebugP3 );

  xo2iobuf DebugP3_pad( .I(PADDO), .PAD(DebugP3));

  specify
    (PADDO => DebugP3) = (0:0:0,0:0:0);
  endspecify

endmodule

module DebugP2 ( input PADDO, output DebugP2 );

  xo2iobuf DebugP2_pad( .I(PADDO), .PAD(DebugP2));

  specify
    (PADDO => DebugP2) = (0:0:0,0:0:0);
  endspecify

endmodule

module p1 ( input PADDO, output p1 );

  xo2iobuf p1_pad( .I(PADDO), .PAD(p1));

  specify
    (PADDO => p1) = (0:0:0,0:0:0);
  endspecify

endmodule

module AD0 ( input PADDO, output AD0 );

  xo2iobuf AD0_pad( .I(PADDO), .PAD(AD0));

  specify
    (PADDO => AD0) = (0:0:0,0:0:0);
  endspecify

endmodule

module Rst ( input PADDO, output Rst );

  xo2iobuf Rst_pad( .I(PADDO), .PAD(Rst));

  specify
    (PADDO => Rst) = (0:0:0,0:0:0);
  endspecify

endmodule

module PhaseA1 ( input PADDO, output PhaseA1 );

  xo2iobuf PhaseA1_pad( .I(PADDO), .PAD(PhaseA1));

  specify
    (PADDO => PhaseA1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Rst2 ( input PADDO, output Rst2 );

  xo2iobuf Rst2_pad( .I(PADDO), .PAD(Rst2));

  specify
    (PADDO => Rst2) = (0:0:0,0:0:0);
  endspecify

endmodule

module RS6 ( input PADDO, output RS6 );

  xo2iobuf RS6_pad( .I(PADDO), .PAD(RS6));

  specify
    (PADDO => RS6) = (0:0:0,0:0:0);
  endspecify

endmodule

module RS5 ( input PADDO, output RS5 );

  xo2iobuf RS5_pad( .I(PADDO), .PAD(RS5));

  specify
    (PADDO => RS5) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADMode_2 ( input PADDO, output ADMode_2 );

  xo2iobuf ADMode_2_pad( .I(PADDO), .PAD(ADMode_2));

  specify
    (PADDO => ADMode_2) = (0:0:0,0:0:0);
  endspecify

endmodule

module AD1 ( input PADDO, output AD1 );

  xo2iobuf AD1_pad( .I(PADDO), .PAD(AD1));

  specify
    (PADDO => AD1) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sout1 ( input PADDO, output Sout1 );

  xo2iobuf0109 Sout1_pad( .I(PADDO), .PAD(Sout1));

  specify
    (PADDO => Sout1) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0109 ( input I, output PAD );

  OB INST5( .I(I), .O(PAD));
endmodule

module Sout2 ( input PADDO, output Sout2 );

  xo2iobuf0109 Sout2_pad( .I(PADDO), .PAD(Sout2));

  specify
    (PADDO => Sout2) = (0:0:0,0:0:0);
  endspecify

endmodule

module Sout3 ( input PADDO, output Sout3 );
  wire   GNDI;

  xo2iobuf0110 Sout3_pad( .I(PADDO), .T(GNDI), .PAD(Sout3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => Sout3) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0110 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module Sout4 ( input PADDO, output Sout4 );
  wire   GNDI;

  xo2iobuf0110 Sout4_pad( .I(PADDO), .T(GNDI), .PAD(Sout4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => Sout4) = (0:0:0,0:0:0);
  endspecify

endmodule

module ClkOut ( input PADDO, output ClkOut );

  xo2iobuf0109 ClkOut_pad( .I(PADDO), .PAD(ClkOut));

  specify
    (PADDO => ClkOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module DataOut ( input PADDO, output DataOut );

  xo2iobuf0109 DataOut_pad( .I(PADDO), .PAD(DataOut));

  specify
    (PADDO => DataOut) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResCS1 ( input PADDO, output ResCS1 );

  xo2iobuf0109 ResCS1_pad( .I(PADDO), .PAD(ResCS1));

  specify
    (PADDO => ResCS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResCS2 ( input PADDO, output ResCS2 );

  xo2iobuf0109 ResCS2_pad( .I(PADDO), .PAD(ResCS2));

  specify
    (PADDO => ResCS2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResCS3 ( input PADDO, output ResCS3 );

  xo2iobuf0109 ResCS3_pad( .I(PADDO), .PAD(ResCS3));

  specify
    (PADDO => ResCS3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResCS4 ( input PADDO, output ResCS4 );

  xo2iobuf0109 ResCS4_pad( .I(PADDO), .PAD(ResCS4));

  specify
    (PADDO => ResCS4) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResCS5 ( input PADDO, output ResCS5 );

  xo2iobuf0109 ResCS5_pad( .I(PADDO), .PAD(ResCS5));

  specify
    (PADDO => ResCS5) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResCS6 ( input PADDO, output ResCS6 );

  xo2iobuf0109 ResCS6_pad( .I(PADDO), .PAD(ResCS6));

  specify
    (PADDO => ResCS6) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResCS7 ( input PADDO, output ResCS7 );

  xo2iobuf0109 ResCS7_pad( .I(PADDO), .PAD(ResCS7));

  specify
    (PADDO => ResCS7) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResCS8 ( input PADDO, output ResCS8 );

  xo2iobuf0109 ResCS8_pad( .I(PADDO), .PAD(ResCS8));

  specify
    (PADDO => ResCS8) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResClk ( input PADDO, output ResClk );

  xo2iobuf0109 ResClk_pad( .I(PADDO), .PAD(ResClk));

  specify
    (PADDO => ResClk) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResSDI1 ( input PADDO, output ResSDI1 );

  xo2iobuf0109 ResSDI1_pad( .I(PADDO), .PAD(ResSDI1));

  specify
    (PADDO => ResSDI1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ResSDI2 ( input PADDO, output ResSDI2 );

  xo2iobuf0109 ResSDI2_pad( .I(PADDO), .PAD(ResSDI2));

  specify
    (PADDO => ResSDI2) = (0:0:0,0:0:0);
  endspecify

endmodule

module ADSout7 ( output PADDI, input ADSout7 );

  xo2iobuf0111 ADSout7_pad( .Z(PADDI), .PAD(ADSout7));

  specify
    (ADSout7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge ADSout7, 0:0:0);
    $width (negedge ADSout7, 0:0:0);
  endspecify

endmodule

module xo2iobuf0111 ( output Z, input PAD );

  IB INST1( .I(PAD), .O(Z));
endmodule

module ADSout8 ( output PADDI, input ADSout8 );

  xo2iobuf0111 ADSout8_pad( .Z(PADDI), .PAD(ADSout8));

  specify
    (ADSout8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge ADSout8, 0:0:0);
    $width (negedge ADSout8, 0:0:0);
  endspecify

endmodule

module OSC_in ( output PADDI, input OSC_in );

  xo2iobuf0112 OSC_in_pad( .Z(PADDI), .PAD(OSC_in));

  specify
    (OSC_in => PADDI) = (0:0:0,0:0:0);
    $width (posedge OSC_in, 0:0:0);
    $width (negedge OSC_in, 0:0:0);
  endspecify

endmodule

module xo2iobuf0112 ( output Z, input PAD );

  IB INST1( .I(PAD), .O(Z));
endmodule

module p_PLLInst_0 ( input CLKI, CLKFB, output CLKOP );
  wire   GNDI;

  EHXPLLJ_B \p/PLLInst_0_EHXPLLJ ( .CLKI(CLKI), .CLKFB(CLKFB), 
    .PHASESEL1(GNDI), .PHASESEL0(GNDI), .PHASEDIR(GNDI), .PHASESTEP(GNDI), 
    .LOADREG(GNDI), .STDBY(GNDI), .PLLWAKESYNC(GNDI), .RST(GNDI), 
    .RESETM(GNDI), .RESETC(GNDI), .RESETD(GNDI), .ENCLKOP(GNDI), 
    .ENCLKOS(GNDI), .ENCLKOS2(GNDI), .ENCLKOS3(GNDI), .PLLCLK(GNDI), 
    .PLLRST(GNDI), .PLLSTB(GNDI), .PLLWE(GNDI), .PLLDATI7(GNDI), 
    .PLLDATI6(GNDI), .PLLDATI5(GNDI), .PLLDATI4(GNDI), .PLLDATI3(GNDI), 
    .PLLDATI2(GNDI), .PLLDATI1(GNDI), .PLLDATI0(GNDI), .PLLADDR4(GNDI), 
    .PLLADDR3(GNDI), .PLLADDR2(GNDI), .PLLADDR1(GNDI), .PLLADDR0(GNDI), 
    .CLKOP(CLKOP), .CLKOS(), .CLKOS2(), .CLKOS3(), .LOCK(), .INTLOCK(), 
    .REFCLK(), .CLKINTFB(), .DPHSRC(), .PLLDATO7(), .PLLDATO6(), .PLLDATO5(), 
    .PLLDATO4(), .PLLDATO3(), .PLLDATO2(), .PLLDATO1(), .PLLDATO0(), .PLLACK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKI => CLKOP) = (0:0:0,0:0:0);
    (CLKFB => CLKOP) = (0:0:0,0:0:0);
  endspecify

endmodule

module EHXPLLJ_B ( input CLKI, CLKFB, PHASESEL1, PHASESEL0, PHASEDIR, 
    PHASESTEP, LOADREG, STDBY, PLLWAKESYNC, RST, RESETM, RESETC, RESETD, 
    ENCLKOP, ENCLKOS, ENCLKOS2, ENCLKOS3, PLLCLK, PLLRST, PLLSTB, PLLWE, 
    PLLDATI7, PLLDATI6, PLLDATI5, PLLDATI4, PLLDATI3, PLLDATI2, PLLDATI1, 
    PLLDATI0, PLLADDR4, PLLADDR3, PLLADDR2, PLLADDR1, PLLADDR0, output CLKOP, 
    CLKOS, CLKOS2, CLKOS3, LOCK, INTLOCK, REFCLK, CLKINTFB, DPHSRC, PLLDATO7, 
    PLLDATO6, PLLDATO5, PLLDATO4, PLLDATO3, PLLDATO2, PLLDATO1, PLLDATO0, 
    PLLACK );

  EHXPLLJ INST10( .CLKI(CLKI), .CLKFB(CLKFB), .PHASESEL1(PHASESEL1), 
    .PHASESEL0(PHASESEL0), .PHASEDIR(PHASEDIR), .PHASESTEP(PHASESTEP), 
    .LOADREG(LOADREG), .STDBY(STDBY), .PLLWAKESYNC(PLLWAKESYNC), .RST(RST), 
    .RESETM(RESETM), .RESETC(RESETC), .RESETD(RESETD), .ENCLKOP(ENCLKOP), 
    .ENCLKOS(ENCLKOS), .ENCLKOS2(ENCLKOS2), .ENCLKOS3(ENCLKOS3), 
    .PLLCLK(PLLCLK), .PLLRST(PLLRST), .PLLSTB(PLLSTB), .PLLWE(PLLWE), 
    .PLLADDR4(PLLADDR4), .PLLADDR3(PLLADDR3), .PLLADDR2(PLLADDR2), 
    .PLLADDR1(PLLADDR1), .PLLADDR0(PLLADDR0), .PLLDATI7(PLLDATI7), 
    .PLLDATI6(PLLDATI6), .PLLDATI5(PLLDATI5), .PLLDATI4(PLLDATI4), 
    .PLLDATI3(PLLDATI3), .PLLDATI2(PLLDATI2), .PLLDATI1(PLLDATI1), 
    .PLLDATI0(PLLDATI0), .CLKOP(CLKOP), .CLKOS(CLKOS), .CLKOS2(CLKOS2), 
    .CLKOS3(CLKOS3), .LOCK(LOCK), .REFCLK(REFCLK), .INTLOCK(INTLOCK), 
    .PLLDATO7(PLLDATO7), .PLLDATO6(PLLDATO6), .PLLDATO5(PLLDATO5), 
    .PLLDATO4(PLLDATO4), .PLLDATO3(PLLDATO3), .PLLDATO2(PLLDATO2), 
    .PLLDATO1(PLLDATO1), .PLLDATO0(PLLDATO0), .PLLACK(PLLACK), .DPHSRC(DPHSRC), 
    .CLKINTFB(CLKINTFB));
  defparam INST10.CLKFB_DIV = 1;
  defparam INST10.CLKI_DIV = 3;
  defparam INST10.CLKOP_CPHASE = 15;
  defparam INST10.CLKOP_DIV = 16;
  defparam INST10.CLKOP_ENABLE = "ENABLED";
  defparam INST10.CLKOP_FPHASE = 0;
  defparam INST10.CLKOP_TRIM_DELAY = 0;
  defparam INST10.CLKOP_TRIM_POL = "RISING";
  defparam INST10.CLKOS2_CPHASE = 0;
  defparam INST10.CLKOS2_DIV = 1;
  defparam INST10.CLKOS2_ENABLE = "DISABLED";
  defparam INST10.CLKOS2_FPHASE = 0;
  defparam INST10.CLKOS3_CPHASE = 0;
  defparam INST10.CLKOS3_DIV = 1;
  defparam INST10.CLKOS3_ENABLE = "DISABLED";
  defparam INST10.CLKOS3_FPHASE = 0;
  defparam INST10.CLKOS_CPHASE = 0;
  defparam INST10.CLKOS_DIV = 1;
  defparam INST10.CLKOS_ENABLE = "DISABLED";
  defparam INST10.CLKOS_FPHASE = 0;
  defparam INST10.CLKOS_TRIM_DELAY = 0;
  defparam INST10.CLKOS_TRIM_POL = "FALLING";
  defparam INST10.DCRST_ENA = "DISABLED";
  defparam INST10.DDRST_ENA = "DISABLED";
  defparam INST10.DPHASE_SOURCE = "DISABLED";
  defparam INST10.FEEDBK_PATH = "CLKOP";
  defparam INST10.FRACN_DIV = 0;
  defparam INST10.FRACN_ENABLE = "DISABLED";
  defparam INST10.INTFB_WAKE = "DISABLED";
  defparam INST10.MRST_ENA = "DISABLED";
  defparam INST10.OUTDIVIDER_MUXA2 = "DIVA";
  defparam INST10.OUTDIVIDER_MUXB2 = "DIVB";
  defparam INST10.OUTDIVIDER_MUXC2 = "DIVC";
  defparam INST10.OUTDIVIDER_MUXD2 = "DIVD";
  defparam INST10.PLLRST_ENA = "DISABLED";
  defparam INST10.PLL_LOCK_MODE = 0;
  defparam INST10.PLL_USE_WB = "DISABLED";
  defparam INST10.PREDIVIDER_MUXA1 = 0;
  defparam INST10.PREDIVIDER_MUXB1 = 0;
  defparam INST10.PREDIVIDER_MUXC1 = 0;
  defparam INST10.PREDIVIDER_MUXD1 = 0;
  defparam INST10.STDBY_ENABLE = "DISABLED";
  defparam INST10.VCO_BYPASS_A0 = "DISABLED";
  defparam INST10.VCO_BYPASS_B0 = "DISABLED";
  defparam INST10.VCO_BYPASS_C0 = "DISABLED";
  defparam INST10.VCO_BYPASS_D0 = "DISABLED";
endmodule
